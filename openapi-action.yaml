openapi: 3.0.3

info:
  version: v3
  title: ecolytiq SaaS

tags:
  - name: Action API
    description: >
      This API facilitates direct actions towards environmental improvement through ecoAction. 
      It currently supports the purchase of carbon credits, allowing users to actively contribute to carbon retirement.

security:
  - BearerAuth: [ ]

paths:
  /action/v2/carbon-credits/projects:
    get:
      operationId: getCarbonCreditProjects
      security:
        - BearerAuth: [ ]
      description: >-
        Use this endpoint to retrieve a list of projects to purchase carbon credits from.
      summary: "Get carbon credit projects"
      tags:
        - Action API
      responses:
        '200':
          description: A List of projects to purchase carbon credits from.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarbonCreditProjectsResponse'
              examples:
                Get carbon credit projects:
                  $ref: "#/components/examples/CarbonCreditProjectsResponseExample"
        '401':
          description: Unauthorized. Access Token is invalid or expired.
        '403':
          $ref: '#/components/responses/ActionAccessDeniedResponse'

  /action/v2/carbon-credits/projects/{projectId}/order:
    post:
      operationId: purchaseCarbonCredits
      security:
        - BearerAuth: [ ]
      tags:
        - Action API
      summary: "Purchase carbon credits"
      description: >
        This endpoint enables the user to order carbon credits from the specified project.
        It provides a unique link for completing payment through Stripe's secure checkout. 
        The total price is commercially rounded to two decimal places.
      parameters:
        - in: path
          name: projectId
          required: true
          schema:
            type: string
          description: The unique identifier of the project from which carbon credits are purchased.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseCarbonCreditsRequest'
            examples:
              Purchase carbon credits request:
                $ref: '#/components/examples/PurchaseCarbonCreditsRequestExample'
      responses:
        '201':
          description: Checkout session created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseCarbonCreditsResponse'
              examples:
                Purchase carbon credits response:
                  $ref: '#/components/examples/PurchaseCarbonCreditsResponseExample'
        '401':
          description: Unauthorized. Access Token is invalid or expired.
        '403':
          $ref: '#/components/responses/ActionAccessDeniedResponse'
        '404':
          description: Not found. The specified project does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionErrorResponse'
              examples:
                Project not found:
                  $ref: '#/components/examples/CarbonCreditProjectNotFoundExample'

components:

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  examples:
    CarbonCreditProjectNotFoundExample:
      value:
        error_code: NOT_FOUND
        error_description: The requested project does not exist.

    PurchaseCarbonCreditsRequestExample:
      value:
        account_id: "1c974398-4d2b-44fa-b292-64a46c0e6577"
        co2_amount_in_g: 2250
        attribution_month: 2023-06

    PurchaseCarbonCreditsResponseExample:
      value:
        checkout_url: "https://checkout.stripe.com/c/pay/cs_test_a11YYufWQzNY63zpQ"
        order_id: "0df68eda-a491-4dda-9758-ed4b7b05f42c"

    ActionAccessDenied403:
      value:
        error_code: FORBIDDEN
        error_description: Missing privileges to access ecoAction.

    CarbonCreditProjectsResponseExample:
      value:
        projects:
          - id: 5c406074-2fe9-4181-83d9-8dcae764a86b
            country: US
            registry_name: Puro.earth
            classification: AVOIDANCE
            images:
              - image_url: https://example.com/image_01.jpg
              - image_url: https://example.com/image_02.jpg
            price_per_kg:
              value: 0.025
              currency_code: EUR
            translations:
              - language_code: en
                title: CarbonCapture Direct Air Capture - Project Bison
                description: CarbonCapture DAC machines that remove CO2 from the atmosphere. Project Bison will be the first mass-scale DAC deployment to use Class VI wells for CO2 storage, and the world's largest single DAC project.
                description_long: |
                  Project Bison was designed to permanently remove CO₂ via direct air capture systems in Wyoming, serving to meet the rapidly growing need for high-quality engineered carbon removal credits.

                  The project has been developed to be rolled out over multiple phases through 2030. It consists of a partnership between CarbonCapture Inc., a US climate tech company that makes direct air capture (DAC) systems based on a groundbreaking modular open-systems architecture, and Frontier Carbon Solutions, a carbon storage developer. The partnership will deploy CarbonCapture’s DAC modules atop Frontier’s CO2 transportation and storage infrastructure in Wyoming to permanently remove 5 million tonnes of CO2 from the atmosphere annually by 2030.

                  DAC refers to technology solutions that filter carbon dioxide directly out of the atmosphere. When air moves over certain materials, they selectively bind to CO2. CarbonCapture uses solid sorbent capture materials, themselves typically composed of common chemicals already in use in other applications. Once CO2 is captured from the atmosphere, heat is applied to release it, regenerating capture materials for another capture cycle. CarbonCapture uses only renewables or other zero-carbon resources to power its systems.
                category: Direct Air Capture
                sustainable_development_goals:
                  - id: "15"
                    description: Protect, restore and promote sustainable use of terrestrial ecosystems, sustainably manage forests, combat desertification, and halt and reverse land degradation and halt biodiversity loss.
  schemas:
    PurchaseCarbonCreditsRequest:
      type: object
      required:
        - account_id
        - co2_amount_in_g
      properties:
        account_id:
          description: The ID of the account holder/user to attribute the purchase to.
          type: string
          maxLength: 64
          example: 1c974398-4d2b-44fa-b292-64a46c0e6577
        co2_amount_in_g:
          type: integer
          format: int64
          description: The amount of CO₂ to retire.
          minimum: 1000
          maximum: 10000000
          example: 2250
        attribution_month:
          description: |
            The month in which the CO₂ will be offset statistically. 
            Month should be formatted as `YYYY-MM` according to ISO 8601.
            If absent, the current month, depending on the bank's default timezone, will be used.
          type: string
          pattern: '^\d{4}-\d{2}$'
          example: "2023-06"

    PurchaseCarbonCreditsResponse:
      type: object
      required:
        - checkout_url
        - order_id
      properties:
        checkout_url:
          type: string
          format: uri
          description: The URL to redirect the user to Stripe's checkout UI.
        order_id:
          type: string
          description: Order identifier for the created purchase.

    CarbonCreditProjectsResponse:
      type: object
      required:
        - projects
      properties:
        projects:
          type: array
          items:
            $ref: '#/components/schemas/CarbonCreditProject'

    CarbonCreditProjectImage:
      type: object
      required:
        - image_url
      properties:
        image_url:
          type: string
          format: url
          description: Url of the project image.
          example: https://example.com/image_01.jpg

    CarbonCreditProject:
      type: object
      required:
        - id
        - country
        - price_per_kg
        - translations
      properties:
        id:
          type: string
          description: The unique identifier of the project.
          example: 5c406074-2fe9-4181-83d9-8dcae764a86b
        country:
          description: The country where the project is located. ISO 3166 Alpha-2 country code.
          type: string
          minLength: 2
          maxLength: 2
          example: US
        registry_name:
          type: string
          description: The registry on which the project’s credits are registered.
          example: Puro.earth
        classification:
          type: string
          description: The classification of the project’s carbon impact, if applicable.
          enum:
            - AVOIDANCE
            - REMOVAL
            - TREE_PLANTING
        images:
          type: array
          description: Images of the project.
          items:
            $ref: '#/components/schemas/CarbonCreditProjectImage'
        price_per_kg:
          $ref: '#/components/schemas/ActionPositiveAmount'
        translations:
          type: array
          description: Translated content of the project.
          items:
            $ref: '#/components/schemas/CarbonCreditProjectTranslation'

    SustainableDevelopmentGoal:
      type: object
      required:
        - id
        - description
      properties:
        id:
          description: Sustainable Development Goal ID.
          type: string
          example: 15
        description:
          type: string
          description: Description of the SDG.
          example: Protect, restore and promote sustainable use of terrestrial ecosystems, sustainably manage forests, combat desertification, and halt and reverse land degradation and halt biodiversity loss.

    CarbonCreditProjectTranslation:
      type: object
      required:
        - language_code
        - title
        - description
        - sustainable_development_goals
      properties:
        language_code:
          type: string
          description: ISO639-1 two-letter language code.
          example: en
        title:
          type: string
          description: The name of the project, as listed in its registry records.
          example: CarbonCapture Direct Air Capture - Project Bison
        description:
          type: string
          description: A concise description of the project.
          example: CarbonCapture DAC machines that remove CO2 from the atmosphere. Project Bison will be the first mass-scale DAC deployment to use Class VI wells for CO2 storage, and the world's largest single DAC project.
        description_long:
          type: string
          description: A detailed description of the project.
          example: |
            Project Bison was designed to permanently remove CO₂ via direct air capture systems in Wyoming, serving to meet the rapidly growing need for high-quality engineered carbon removal credits.
            
            The project has been developed to be rolled out over multiple phases through 2030. It consists of a partnership between CarbonCapture Inc., a US climate tech company that makes direct air capture (DAC) systems based on a groundbreaking modular open-systems architecture, and Frontier Carbon Solutions, a carbon storage developer. The partnership will deploy CarbonCapture’s DAC modules atop Frontier’s CO2 transportation and storage infrastructure in Wyoming to permanently remove 5 million tonnes of CO2 from the atmosphere annually by 2030.
            
            DAC refers to technology solutions that filter carbon dioxide directly out of the atmosphere. When air moves over certain materials, they selectively bind to CO2. CarbonCapture uses solid sorbent capture materials, themselves typically composed of common chemicals already in use in other applications. Once CO2 is captured from the atmosphere, heat is applied to release it, regenerating capture materials for another capture cycle. CarbonCapture uses only renewables or other zero-carbon resources to power its systems.
        category:
          type: string
          description: The methodology or technology being applied in the project.
          example: Direct Air Capture
        sustainable_development_goals:
          type: array
          description: Lists the UN Sustainable Development Goals (SDGs) that the project claims an impact on. There are 17 goals, described in the [SDGs](https://sdgs.un.org/goals).
          items:
            $ref: '#/components/schemas/SustainableDevelopmentGoal'

    ActionPositiveAmount:
      description: Price per kg.
      type: object
      required:
        - value
        - currency_code
      properties:
        value:
          description: Decimal fraction can be between 0 and 10.
          type: number
          maximum: 99999.9999999999
          minimum: 0.0000000001
          example: 0.0225
        currency_code:
          type: string
          description: ISO 4217 currency code.
          example: USD

    ActionErrorResponse:
      description: Error messages for API clients.
      type: object
      required:
        - error_code
        - error_description
      properties:
        error_code:
          type: string
          example: FORBIDDEN
          description: identifies the type of error. See all used codes in [ecolytiq Error Code Summary](#tag/Errors/ecolytiq-Error-Code-Summary)
        error_description:
          type: string
          example: Missing privileges to access projects.
          description: human readable error description

  responses:
    ActionAccessDeniedResponse:
      description: Forbidden. No access to ecoAction granted.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ActionErrorResponse'
          examples:
            Access denied:
              $ref: '#/components/examples/ActionAccessDenied403'
