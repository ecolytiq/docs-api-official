openapi: 3.0.3

info:
  description: |
    APIs of the ecolytiq SaaS
  version: v3 (2022-12-08)
  title: ecolytiq SaaS
  contact:
    email: support@ecolytiq.com
    name: ecolytiq GmbH
    url: https://ecolytiq.com
  termsOfService: https://ecolytiq.com/imprint
  x-logo:
    url: "https://developer.ecolytiq.com/assets/logo.png"
    backgroundColor: "#F9F9F9"
    altText: "ecolytiq GmbH"
servers:
  - description: ecolytiq API (Sandbox)
    url: https://api.sandbox.arm.ecolytiq.network
tags:
  - name: General Information
    description: |
      This document describes the API of the ecolytiq Sustainability-as-a-Service&reg; platform.

      ecolytiq has developed a method of assigning financial (bank) transactions with a CO<sub>2</sub> footprint therefore allowing financial institutions to inform their end customers about the ecological impact of their transactions. 
      The calculation is based on the amount of the (outgoing) transaction and a category of the transaction which are both components of various region-specific calculation models.

      ## Basic Requirements

      To use the ecolytiq platform a customer is required to have a working pair of client credentials consisting of a `client_id` and a `client_secret`.
      Those credentials are provided by ecolytiq after a contract is signed.

      The customer is responsible for providing the client application that manages the integration of the ecolytiq services into their systems.

      Certain features may not be available to or necessary for all customers. 
      Hence, the set of enabled features is bound to a set of client credentials.

      ## Information on Available and Enabled Features
      
      As not all features may be relevant to all customers the feature set can vary for different client credentials.
      The ecolytiq platform provides an [info API](#tag/Info-API) to get information about the features that are available (in general) and accessible/enabled (for the customer).

      ## Processing of Financial Transactions

      ### Transaction Enrichment

      The core functionality is enriching the transactions with the ecological footprint (at present: CO<sub>2</sub>) related to the purchase. 
      This can be achieved by sending transactions to the [transaction API](#tags/Transaction-API). 

      The ecolytiq platform has the ability to immediately return the calculation result ("synchronous processing") or to only accept the transactions and schedule the calculations until a later point in time ("asynchronous processing").
      In any case the [result of the calculation](#operation/getTransactionsTransactions) can also be retrieved at a later point in time.

      ### Refinement of Transactions

      In some cases the amount of the transaction is not a good indicator on the ecological footprint related to the transaction.
      In such instances the transactions can be refined by [answering transaction-specific questions](#operation/postTransactionsQuestions) (e.g., "How many liters was your refill at the gas station?").

      ### Transaction Processing and Refinement Workflow
      
      A suggested workflow for processing an end customer's transaction looks as follows:
      
      1. Send the transaction to the ecolytiq service for processing:          
         [`POST /transactions/v1/transactions`](#operation/postTransactionTransaction)

      2. Request a list of references to refinement questions that are available for this transaction:  
         [`GET /transactions/v1/refinements?transaction_ids=<transaction_ids>`](#operation/getTransactionsRefinements)
      3. Retrieve the content (questions and answers) associated with the refinement question and answer IDs:          
         [`GET /transactions/v1/questions?question_ids=<question_ids>`](#operation/getTransactionsQuestions)
         > #### Note
         > This step can also be executed in the very beginning omitting the `question_ids` parameter.
         In that case, **all available** questions are returned. 
         The result can then be cached at the client side.
      
      4. Have the end customer answer the refinement question(s):  
         This must be handled in the client application

      5. Send the answers to the refinement questions to the ecolytiq platform:  
         [`POST /transactions/v1/refinements`](#operation/postTransactionsRefinements)
      
      6. Retrieve the calculation result for the refined transaction:  
         [`GET /transactions/v1/transactions?transaction_ids=<transaction_ids>`](#operation/getTransactionsTransactions) 
      
      ### Account Profiling

      For some types of purchases it can be helpful to have additional knowledge about the end customer. 
      For example, the supermarket shopping basket of a person regularly having meat on their plated differs from that of a vegan person. 
      It is possible to request such information for each individual transaction.
      However, it can be easier to attribute such information to an end customer once.
      For this, the [profiling API](#tag/Profiling-API) is available.

      ## Educational and Informational Content

      Another important feature of the ecolytiq Sustainability-as-a-Service&reg; platform is the educational content that allows end customers to gain more knowledge and and awareness of the ecological footprint created by their purchase decisions.
      In the long term informing and educating end customers about their individual impact will help making them more literate choices when consuming goods and services. 

      At present, ecolytiq offers the following types of content: 

        * **Comparables** are small examples that for a given CO<sub>2</sub> footprint show in a concrete and easily graspable way how much of an impact that is.
        
        * **Insights** are short and simple tips and tricks that help end customers to reduce their impact.
          In combination with the [profiling API](#tag/Profiling-API) the Insights shown are even more relevant to the end customer.
        
        * **Explanations** are content pieces that give information about the ecolytiq calculation method.

      The [profiling API](#tag/Profiling-API) delivers references to the content pieces.
      Using the [content API](#tag/Content-API) the texts of the educational and informational content pieces can be fetched various different languages.

      ## Operations Options

      ### SaaS Solution

      The ecolytiq platform is available as Software-as-a-Service solution and accessible via public internet. 
      The customer is required to build and maintain the client application. Operations of the ecolytiq platform is handled by ecolytiq GmbH.

      There are several options available for our customers:

        * The general SaaS platform:  
          This is a high-availability SaaS platform managed and operated by ecolytiq.
          It is not specific to individual customers, i.e., multiple clients may be operated on the same platform. 
          However, there is a strict separation between each clients data. 
          Data visibility between different clients is excluded on a technical level.

        * Dedicated SaaS platform:  
          This is a high-availability SaaS platform managed and operated by ecolytiq that is restricted to a specific customer.
          No other customers are onboarded or hosted on a dedicated SaaS platform. 
          Depending on customer requirements the dedicated SaaS platform can be hosted using a specific cloud service provider.
      
      ### On-Premises Solution

      Should it be necessary due to customer regulations the ecolytiq platform can also be hosted on customer's premises or by the customer with their preferred cloud service provider. 
      This has the advantage that the data never leaves the customer's realm of operations.
      However, management and operation of the ecolytiq platform is then in the responsibility of the customer. 

      The highly qualified ecolytiq staff can support the customer in setting up the ecolytiq platform as on-prem solution.
      
      ## Security and Data Protection
      
      We as ecolytiq GmbH adhere to and are compliant with all relevant data protection standards, such as GDPR, ISO27001, or PCI-DSS. 
      Our platforms are regularly checked for security vulnerabilities.

      However, financial data contains highly sensitive information about individuals. Therefore, our customers **are not allowed** to send actual personally identifiable information to the ecolytiq SaaS platform.
      This is especially important for account identifiers -- **Do not use actual bank account numbers or PANs** (personal account numbers, i.e., credit card numbers) as account identifiers!

      Account data must be pseudonymized. We recommend using [UUIDs](https://en.wikipedia.org/wiki/Universally_unique_identifier) as account identifiers. 
      Mapping the account identifier to the end customer account **must be handled on the customer client application side**.



  - name: Authentication
  - name: Errors
    description: |
      ## HTTP Status Code Summary
      | Status Code                        | Description                                                                                      |
      |------------------------------------|--------------------------------------------------------------------------------------------------|
      | 200 - OK                           | Everything worked as expected.                                                                   |
      | 201 - Created                      | Everything worked as expected. Resource created.                                                 |
      | 204 - No Content                   | Everything worked as expected.                                                                   |
      | 400 - Bad Request                  | The request was unacceptable, often due to missing a required parameter.                         |
      | 401 - Unauthorized                 | No valid Access Token provided.                                                                  |
      | 403 - Forbidden                    | The API key doesn't have permissions to perform the request.                                     |
      | 404 - Not Found                    | The requested resource doesn't exist.                                                            |
      | 409 - Conflict                     | The request conflicts with another request (perhaps due to using the same idempotent key).       |
      | 422 - Unprocessable Entity         | Unprocessable Entity                                                                             |
      | 429 - Too Many Requests            | Too many requests hit the API too quickly. We recommend an exponential backoff of your requests. |
      | 500, 502, 503, 504 - Server Errors | Something went wrong on ecolytiq's end.                                                          |
  - name: Rate Limit
    description: |
      In each response you find Rate Limit Information fields like `X-RateLimit-Limit`, `X-RateLimit-Remaining` and `X-RateLimit-Reset`.
      
      ## Rate Limit Headers
      | Header                | Description                                                         |
      |-----------------------|---------------------------------------------------------------------|
      | X-RateLimit-Limit     | Number of requests for the specific endpoint                        |
      | X-RateLimit-Remaining | Number of ramining requests for the specific endpoint               |
      | X-RateLimit-Reset     | Date-Time, when X-RateLimit-Remaining is reset to X-RateLimit-Limit |

      At the moment we do not use rate limits. However, we reserve the right to use them. This will be announced.
  - name: Postman
    description: |
      ## Import Request Collection and Environment

      ### Request Collection

      1. In Postman, click on the "Import" button in the upper left corner.

      2. In the opened window click on "Choose Files" under "Import File".

      3. Select the file "<date>_ecolytiq_Sandbox.postman_collection.json" and press "open".

      4. The collection is now imported and can be found in the list on the left side of the window.


      ### Environment

      1. In Postman, click on the "Import" button in the upper left corner.

      2. Click on "Import" in the lower right corner of the currently opened window.

      3. Click on "Select File", choose then "*.postman_environment.json" (you get the file during the onboarding phase) and press "open".

      4. Close the "Management Environment" window.

      5. Select "Sandbox" from the dropdown in the upper right corner.

      ## Download

      <a href ="http://developer.ecolytiq.com/postman/2022-12-08_ecolytiq_Sandbox.postman_collection.json" download>Sandbox.postman_collection.json</a>

  - name: Info API
    description: |
      The info API can be used to obtain information about the ecolytiq platform configuration and available features. 
      It offers a simple and reliable method to verify, 

      * Which [country models for CO<sub>2</sub>](#operation/getInfoCo2models) footprint calculation are available and accessible to the requestor,
      
      * Which [categorization systems](#operation/getInfoCategorySystems) for transactions are available and accessible for transaction enrichment,
      
      * For some categorization systems, which [categories](#operation/getInfoCategories) are available 
  - name: Transaction API
    description: |
      The transaction API is used to process financial transactions by the ecolytiq Sustainability-as-a-Service&reg; platform.

      It is possible to send transactions for enrichment and receive the calculated CO<sub>2</sub> footprint based on a combination of transaction amount and transaction category. 
      
      For some types of transactions this may, however, be insufficient as the amount of money spent does not directly correlate to the CO<sub>2</sub> (equivalent) emissions of the purchased goods and services.
      For example, airline ticket prices are becoming increasingly expensive the closer the date of travel is. But the amount of CO<sub>2</sub> emissions is independent on whether the ticket was bought last minute or a year in advance. 
      In such cases the transaction data can be refined by answering specific transaction-related questions, like the duration of the flight, which will in turn allow for a much more accurate calculation of the CO<sub>2</sub> emissions.
  - name: Content API
    description: |
      The ecolytiq Sustainability-as-a-Service&reg; platform offers a variety of product features that go beyond pure calculation of the CO<sub>2</sub> footprint related to a financial transaction.
      There are 

      * Comparables: Small information pieces that put a given CO<sub>2</sub> footprint into perspective by comparing it to something easily comprehensible, like a distance driven by car.
        As the name suggests a Comparable is a concrete example of what a certain CO<sub>2</sub> footprint means.  
        It can be used to create awareness on the end customers side on how much of an impact a certain financial transaction has.
      
      * Insights: Information pieces with tips and tricks how an and customer can reduce their personal CO<sub>2</sub> emissions

      * Explanations: Information pieces detailing how the ecolytiq calculation method works.

      Those content pieces can be retrieved via the content API in various languages.
  - name: Profiling API
    description: |
      In the most basic way the ecolytiq Sustainability-as-a-Service&reg; platform is used to calculate the CO<sub>2</sub> footprint related to a "spending transaction" by taking into account the amount of money spent and the category of the transaction.
      This gives an estimate of the footprint based on average consumer behavior. 
      For example, in the average grocery basket is still plenty of meat.
      However, a specific end customer may have chosen to live by a meat-reduced, meat-free, vegetarian, or vegan diet.
      Hence the average shopping basket will give an inaccurate CO<sub>2</sub> footprint for them.
      To improve the footprint calculation it is possible to store additional information about an end customer and improving the calculation accuracy in turn.
  - name: Account API
    description: |
      Should the necessity arise to remove all data of a specific end customer from the ecolytiq platform this can be done using the account API. 
  - name: onPrem API
    description: |
      In some cases the ecolytiq Sustainability-as-a-Service&reg; platform is not used as Software as a Service (SaaS) solution but hosted on a customers own premises or inside their own cloud instance.
      If the customers whish they can use a rating system for content delivered by the ecolytiq platform.
      We recommend to regularly submit the content ratings back to ecolytiq so that we can improve the content quality.


      > #### Please Note 
      >
      > This endpoint must be called on the ecolytiq SaaS platform which is accessible over the public internet. 
      > Is may be necessary to obtain a special pair of `client_id` and `client_secret` credentials for the SaaS platform to use this endpoint.
      > No PII is transmitted via this endpoint.


security:
  - bearerAuth: [ ]

paths:
  /oauth/token:
    post:
      operationId: postOAuthToken
      security:
        - BasicAuth: []
      description: Request OAuth 2.0 Access Token with client credentials grant. This endpoint is proteced with Basic Auth. Use the client_id as username and the client_secret as password.
      summary: Request Access Token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: |
            AccessToken and Lifetime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: |
            Unauthorized. Invalid or expired Client Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'

  /info/v1/co2models:
    get:
      operationId: getInfoCo2models
      security:
        - BearerAuth: []
      description: |
        Retrieve a list of supported calculation models for CO<sub>2</sub> footprint calculation.
        The `enabled` flag informs wether a specific model is available for use by the requesting set of client credentials since access to the models may vary from customer to customer.
      summary: List of CO₂ models
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of supported and enabled CO<sub>2</sub> models.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CO2ModelResponse'
              examples:
                Example:
                  $ref: '#/components/examples/CO2ModelListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /info/v1/category-systems:
    get:
      operationId: getInfoCategorySystems
      security:
        - BearerAuth: []
      description: >-
        Retrieve a list of category systems that are supported by the platform.
        The `enabled` flag informs wether a customer / set of client credentials is permitted to use a specific category system, since not all supported category systems may be accessible by every customer.
      summary: List of category systems
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of supported and enabled category systems.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySystemListResponse'
              examples:
                Example:
                  $ref: '#/components/examples/CategorySystemListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /info/v1/categories:
    get:
      operationId: getInfoCategories
      security:
        - BearerAuth: []
      description: Retrieve a list of available transaction categories.
      summary: List of categories
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of categories
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
              examples:
                Example:
                  $ref: '#/components/examples/CategoryListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /transactions/v1/transactions:
    post:
      operationId: postTransactionsTransactions
      security:
        - BearerAuth: []
      description: |
        Use this endpoint to process and store bank transactions. 

        ### Identification of transactions and accounts

        To be able to request information about a transaction at a later time each transaction must be uniquely identifiable by its `transaction_id`. 
        We recommend using [Universally Unique Identifiers](https://en.wikipedia.org/wiki/Universally_unique_identifier) for the `transaction_id`.
        
        The transactions must also be assigned to individual accounts.
        This allows using the account's [profile data](#tag/Profiling-API) for more accurate calculations.

        > #### IMPORTANT
        >
        > Although ecolytiq GmbH follows data protection and data security best practices and is compliant with ISO27001 and PCI-DSS, actual bank account numbers, personal account numbers (PAN, i.e., credit card numbers), or other personally identifiable information (PII) **must not be used as `account_id`**.
        >
        > Pseudonymization of account information and maintaining the list relating the end customer's PII to the `account_id`s used on the ecolytiq platform **must be handled on the customer side**.
        >
        > ecolytiq GmbH cannot be held liable for any loss, leak, unauthorized publication of PII which are a direct result of violating
        
        We recommend using [Universally Unique Identifier](https://en.wikipedia.org/wiki/Universally_unique_identifier) for the `account_id`s.

        ### Immediate Response

        The request is by default synchronous, i.e. the processing result is returned immediately in the response body to the request.
        Successfully processed transactions are in the results list, identifiable by their `transaction_id`. 
        In case of an error (e.g. unknown category), you can find  the transaction in the errors list, identifiable by their `transaction_id` as well. 
        
        ### Asynchronous Request

        It is also possible to only send the data for processing and not wait for an immediate server response with the calculation results.
        In that case the `async` flag in the request has to be set to `true`.
        The server will only respond with a `202` status, i.e., accept the request, but will que the transactions for later processing.
        The calculation result can later be requested by calling the [`GET /transactions/v1/transactions`](#operation/getTransactionsTransactions) endpoint with the corresponding `transaction_id`s.
      summary: Process transactions
      tags:
        - Transaction API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
            examples:
              Minimal Request:
                $ref: '#/components/examples/Transaction-Request-Example-01'
              Request With Merchant:
                $ref: '#/components/examples/Transaction-Request-Example-02'
              Asynchronous Request With Merchant:
                $ref: '#/components/examples/Transaction-Request-Example-03'
      responses:
        '200':
          description: |
            Result of Transaction processing.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
              examples:
                Response-Without-Request:
                  $ref: '#/components/examples/Transaction-Response-Example-01'
                Response-With-Request:
                  $ref: '#/components/examples/Transaction-Response-Example-02'
        '202':
          description: |
            Result of Transaction processing.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAsyncResponse'
              examples:
                Response:
                  $ref: '#/components/examples/Transaction-Response-Example-03'
        '400':
          description: |
            Bad Request. Size of Transactions is invalid.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'

    get:
      operationId: getTransactionsTransactions
      security:
        - BearerAuth: []
      summary: Get Transactions by IDs
      description: Retrieve information about previously processed transactions identified by their IDs.
      tags:
        - Transaction API
      parameters:
        - in: query
          required: true
          name: ids
          schema:
            type: array
            minItems: 1
            maxItems: 100
            items:
              $ref: '#/components/schemas/TransactionId'
          style: form
          explode: false
      responses:
        '200':
          description: List of requested Transactions
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: |
            Bad Request. Size of Transactions is invalid.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /transactions/v1/update-category:
    post:
      operationId: postTransactionsUpdateCategory
      security:
        - BearerAuth: [ ]
      description: >-
        Use this endpoint to update categories for given transactions.
      summary: Update Category
      tags:
        - Transaction API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionCategoryUpdateRequest'
            examples:
              Minimal Request:
                $ref: '#/components/examples/Transaction-Category-Update-Request-Example-01'
              Asynchronous Request:
                $ref: '#/components/examples/Transaction-Category-Update-Request-Example-02'
      responses:
        '200':
          description: |
            Result of Transaction Category Update.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
              examples:
                Minimal-Request-Response:
                  $ref: '#/components/examples/Transaction-Category-Update-Response-Example-01'
        '202':
          description: |
            Result of Transaction processing.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAsyncResponse'
              examples:
                Response:
                  $ref: '#/components/examples/Transaction-Category-Update-Response-Example-02'
        '400':
          description: |
            Bad Request. Size of Transactions is invalid.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'


  /transactions/v1/refinements:
    get:
      operationId: getTransactionsRefinements
      security:
        - BearerAuth: []
      summary: Get Available Questions for Refinement of Specific Transactions
      description: >-
        For certain types of goods or services the amount spent may not actually be an accurate representation of the CO<sub>2</sub> (equivalent) emission caused by that good or service. 

        A few examples for such types of transactions are:
          * Service stations: Fuel prices are highly volatile and vary from station to station. Therefore, the volume and type of fuel could be used for better calculation of the CO<sub>2</sub> emission related with a service station transaction.
          * Air travel: Prices for airline tickets are dependent on the day of flight as well and even more so on the date of purchase. Therefore, the hours of the flight give the better basis for calculating CO<sub>2</sub> emissions for air travel.

        Calling this endpoint with valid transaction IDs will return a list of suitable refinement question IDs for the transactions in request. 
        If the question has already been answered the reference to the corresponding answer (or the value if it is not a predefined answer) will be also returned.

        > #### Note

        > Calling this endpoint returns only references to content pieces (i.e., content IDs for questions and/or answers).

        > The mapping of question IDs / answer IDs and their text representation can be obtained from the [`GET /transactions/v1/questions`](#operation/getTransactionsQuestions) endpoint
      tags:
        - Transaction API
      parameters:
        - in: query
          name: transaction_ids
          description: a list of transaction IDs
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
          example:
            - 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            - 75353c62-6757-4740-979d-dfa52cdb9fba
      responses:
        '200':
          description: A list of transaction ids and their corresponding question ids. If the question is already answered the field `answer_id` is set. Otherwise it is `null`.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionQuestionsResponse'
              examples:
                Refinement questions without answer:
                  $ref: "#/components/examples/RefinementsUnansweredResponseExample"
                Refinement questions answered:
                  $ref: "#/components/examples/RefinementsAnsweredResponseExample"
                No refinement questions available:
                  $ref: "#/components/examples/RefinementsUnavailableResponseExample"
        '400':
          description: |
            Bad Request
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequestRefinements-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'
    post:
      operationId: postTransactionsRefinements
      security:
        - BearerAuth: []
      description: |
        Recalculate the carbon footprint associated with a transaction by providing answers to specific questions. 

        The request must include the `transaction_id` and the `answer_id`. 
        For questions with answers of the `SELECTABLE` type this is already sufficient.
        For questions with answers of the `INPUT` type the `input` value must also be included.
        
        References to questions relevant for certain transaction can be retrieved by calling the [`GET /transactions/v1/refinements`](#operation/getTransactionsRefinements) endpoint with the corresponding transaction ID.
        The text version of the questions and possible answers can be obtained by calling the [`GET /transactions/v1/questions`](#operation/getTransactionsQuestions) endpoint (with the question IDs).
      summary: Provide Answers for Transaction Refinement
      tags:
        - Transaction API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionBulkAnswersRequest'
            examples:
              Synchronous Request for Answering Refinement Questions:
                $ref: "#/components/examples/RefinementsAnswerFlightsRequestExample"
      responses:
        '200':
          description: Confirmation that answer is saved
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionRefinementResponse'
              examples:
                Updated Calculation Result:
                  $ref: '#/components/examples/RefinementsAnswerFlightsResponseExample'
        '400':
          description: |
            Bad Request. Size of Transactions is invalid.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /transactions/v1/questions:
    get:
      operationId: getTransactionsQuestions
      security:
        - BearerAuth: []
      summary: Get Questions and Answers for Transaction Refinement (by IDs)
      description: | 
        Retrieve questions and answers that can be used to refine a transaction. 

        Calling this endpoint without the `question_ids` parameter will return the text of all questions that can be used for transaction refinement. 
        A client application could fetch the question and answer texts once and cache them for a certain amount of time.

        Including the `question_ids` parameter returns only the content for the referenced questions.

        To get a list of references to questions relevant for a specific transaction, please use the 
        ["Get refinements for transactions"](#operation/getTransactionsRefinements) endpoint.

        > #### Note
        >
        > This endpoint returns actual content pieces.
      tags:
        - Transaction API
      parameters:
        - in: query
          name: question_ids
          description: a list of question ids. If list of ids are not present, all questions (+answers) returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          $ref: '#/components/parameters/languageCodes'
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of Questions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'
        '400':
          description: |
            Bad Request. Size of Transactions is invalid.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/comparables:
    get:
      operationId: getContentComparables
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: |
        Get a specific Comparable or a list of Comparables or all Comparables for a given CO<sub>2</sub> footprint.

        The amount of CO<sub>2</sub> (`co2_footprint`) in grams to compare is required for calling this endpoint. 
        In addition it can be called with a list of content IDs (`ids` parameter) to select which Comparables shall be displayed.
        
        It is possible to retrieve the Comparables in different languages via the `language_codes` parameter.
      summary: Get Comparables for a Given CO2 Footprint
      parameters:
        - in: query
          name: co2_footprint
          description: CO2 footprint in grams
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all Comparables returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of comparables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComparableResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ComparableResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/comparables/random:
    get:
      operationId: getContentComparablesRandom
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: >-
        Get an individual Comparable or a list of Comparables for a given CO<sub>2</sub> footprint.
        The content pieces returned by calling this endpoint are chosen at random.

        The amount of CO<sub>2</sub> (`co2_footprint`) in grams to compare is required for calling this endpoint. 
        The number of Comparables returned in the response can be specified using the `size` parameter.

        The Comparables returned can be limited to specific categories using the `categories` parameter.

        It is possible to retrieve the Comparables in different languages via the `language_codes` parameter.

      summary: Get Random Comparables for a Given CO2 Footprint
      parameters:
        - in: query
          name: co2_footprint
          description: CO2 footprint in grams
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: categories
          description: >-
            used as filter for categories. 
            If it is unset or empty all categories are used.
            A  [list of categories](#operation/getInfoCategories) can be retrieved using the [Info API](#tag/Info-API).
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: size
          description: Number of content pieces returned.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of comparables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComparableResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ComparableResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/insights:
    get:
      operationId: getContentInsights
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: >-
        Get all or specific Insights on how to improve individual CO<sub>2</sub> impact.
      summary: Get Insights by IDs
      parameters:
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all insights returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of insights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/InsightsResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/contextual-insights:
    get:
      operationId: getContextualInsights
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: Get Contextual Insights by IDs.
      summary: Get Contextual Insights by IDs.
      parameters:
        - in: query
          name: ids
          description: a list of ids. If list of ids is not present, all contextual insights returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of insights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContextualInsightsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ContextualInsightsResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'


  /content/v1/insights/random:
    get:
      operationId: getContentInsightsRandom
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: >-
        Get a number of random Insights on how to improve the individual CO<sub>2</sub> footprint.

        The Insights returned can be limited to specific categories. 
        [Available categories](#operation/getInfoCategories) can be retrieved using the [Info API](#tag/Info-API).
      summary: Get Insights (for a Given Category)
      parameters:
        - in: query
          name: categories
          description: used as filter for categories. If it is unset or empty all categories are used.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: size
          description: Number of content pieces returned.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of insights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/InsightsResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /profiling/v1/insights:
    get:
      operationId: getProfilingInsights
      security:
        - BearerAuth: []
      tags:
        - Profiling API
      description: >-
        Returns all matching references to Insights for specified accounts. 

        The Insights can also be restricted to specific [categories](#operation/getInfoCategories) (see [Info API](#tag/Info-API)).

        > #### Note

        > This endpoint only returns references (i.e., content IDs) to the content.
        The actual content can be retrieved via the [content API](#tag/Content-API).
      summary: Get Insights (for accounts)
      parameters:
        - in: query
          name: account_ids
          description: list of account ids
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: categories
          description: used as filter for categories. If it is unset or empty all categories are used.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: Returns a list of content ids for the given accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsProfilingResponse'
              examples:
                Example:
                  $ref: '#/components/examples/InsightsProfilingResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /profiling/v1/contextual-insights:
    get:
      operationId: getContextualInsightsForAccounts
      security:
        - BearerAuth: [ ]
      tags:
        - Profiling API
      description: >-
        Get Contextual Insights (for accounts)

        > #### Note

        > This endpoint only returns references (i.e., content IDs) to the content.
        The actual content can be retrieved via the [content API](#tag/Content-API).
      summary: Get Contextual Insights (for accounts)
      parameters:
        - in: query
          name: account_ids
          description: list of account ids
          required: true
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: Returns a list of content ids for the given accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsProfilingResponse'
              examples:
                Example:
                  $ref: '#/components/examples/InsightsProfilingResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'
  /content/v1/explanations:
    get:
      operationId: getContentExplanations
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: >-
        Retrieve all or individual Explanations on the ecolytiq calculation.
      summary: Get Explanations by ID
      parameters:
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all explanations returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              minimum: 1
              maximum: 10
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of explanations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ExplanationResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/explanations/random:
    get:
      operationId: getContentExplanationsRandom
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: >-
        Get randomly chosen Explanations on the ecolytiq calculation method. 
        The results returned can be limited to certain categories. 

        Use the [info API](#tag/Info-API) to fetch a (list of available categories)[#operation/getInfoCategories].
      summary: Get Explanations (for given categories)
      parameters:
        - in: query
          name: categories
          description: used as filter for categories. If it is unset or empty all categories are used.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: size
          description: Number of results returned.
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of explanations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ExplanationResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /profiling/v1/questions:
    get:
      operationId: getProfilingQuestions
      security:
        - BearerAuth: []
      summary: Get Questions for Profiling by IDs
      description: >-
        Get questions, answers and translations used for Profiling. 
        
        The answers to the questions are used to store additional information for specific end customers. 
        This is useful for improving the calculation results (e.g., if the end customer is known to be vegan, the vegan "base basket" is used for calculation of the footprint after shopping in the supermarket) as well as reducing unsuitable Insights (i.e., someone known to be vegan will not be shown information on how much CO<sub>2</sub> they can save by reducing meat in their diet).

        By calling this endpoint all or specific profile-related questions and their answers can be retrieved.

        The questions can be retrieved in multiple languages using the `language_codes` parameter.

        > #### Note:

        > This endpoint returns the actual content.
      tags:
        - Profiling API
      parameters:
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all questions (+answers) returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - $ref: "#/components/parameters/languageCodes"
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of Questions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'

  /profiling/v1/answer:
    post:
      operationId: postProfilingAnswer
      security:
        - BearerAuth: []
      description: >-
        Save Answer for a given Question. 

        In case of pre-defined answers only the `answer_id` and the `account_id` are necessary.
        If the answer is "free text" the `input` must be submitted as well.
      summary: Save Answer for a given Question
      tags:
        - Profiling API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAnswersRequest'
      responses:
        '200':
          description: Confirmation that answer is saved
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAnswerResponse'

  /account/v1/delete-accounts:
    post: # Should this not be DELETE?
      operationId: postAccountDeleteAccounts
      security:
        - BearerAuth: []
      description: |
        By calling this endpoint all data for the given accounts is deleted from the ecolytiq platform.
        This includes
          * Transaction data
          * Profile data

        > #### Warning 
        >
        > There is no double confirmation! 
        > Once the endpoint is called with valid `account_ids` the data related to those `account_ids` is **gone for good**.

        
      summary: Delete all data of the given accounts
      tags:
        - Account API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccountsRequest'
      responses:
        '200':
          description: Confirmation that the request has been processed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountsResponse'
        '202':
          description: Confirmation that request can be handled
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountsResponse'

  /on-prem/v1/content-ratings:
    post:
      operationId: postOnPremContentRatings
      security:
        - BearerAuth: []
      description: >-
        Use this endpoint to send us feedback about content.         
        

        Currently, only the "five star" rating system is supported.
        To send feedback about a content piece please send the accumulated number of *all* ratings for each rating category also when updating. 

      summary: Send us Feedback about Content Rating
      tags:
        - onPrem API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRatingRequest'
            examples:
              Example:
                $ref: '#/components/examples/Content-Rating-Request-Example'
      responses:
        '200':
          description: Confirmation that the request has been processed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentRatingResponse'
              examples:
                Example:
                  $ref: '#/components/examples/Content-Rating-Response-Example'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

components:
  headers:
    X-RateLimit-Limit:
      schema:
        type: integer
      description: Request limit per hour.
    X-RateLimit-Remaining:
      schema:
        type: integer
      description: The number of requests left for the time window.
    X-RateLimit-Reset:
      schema:
        type: string
        format: date-time
      description: The UTC date/time at which the current rate limit window resets.
  
  parameters:
    languageCodes:
        name: "language_codes"
        in: "query"
        description: ISO639-1 two-letter language code(s) to select output language(s) of the content piece(s).
        required: false
        style: form
        explode: false
        schema:
          type: array
          items:
            type: string


  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  examples:
    CO2ModelListExample:
      value:
        request_id: 6069c6b4a7ee26ae
        results:
          - code: DE
            description: DE Model
            currency: EUR
            enabled: true
          - code: US
            description: US Model
            currency: USD
            enabled: true
          - code: UK
            description: UK Model
            currency: GBP
            enabled: false

    CategorySystemListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - code: ECOLYTIQ
            description: The ecolytiq category system
            enabled: true
          - code: FTS
            description: The FintecSystems category system
            enabled: false
          - code: MCC
            description: Merchant Category Codes
            enabled: true
    CategoryListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - category: ex:misc
            system: ECOLYTIQ
            description: General
          - category: ex:food.groceries
            system: ECOLYTIQ
            description: Category for groceries
    CurrencyCodeListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - code: EUR
            description: Euro
            decimal_places: 2
            enabled: true
          - code: GBP
            description: Pound sterling
            decimal_places: 2
            enabled: false
          - code: JPY
            description: Japanese yen
            decimal_places: 0
            enabled: false
          - code: USD
            description: United States dollar
            decimal_places: 2
            enabled: true
    ComparableResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - id: 02805b59-878d-438d-a68b-9d721766ec60
            categories:
              - system: ECOLYTIQ
                value: "ex:misc"
              - system: ECOLYTIQ
                value: "ex:food.groceries"
            content:
              - language_code: de
                text: Das entspricht 14 Paketlieferungen.
              - language_code: en
                text: Equal to 14 parcel deliveries.
          - id: 0c21d5d2-9992-4d97-ae0f-713af30e1165
            categories:
              - system: ECOLYTIQ
                value: "ex:misc"
              - system: ECOLYTIQ
                value: "ex:food.groceries"
            content:
              - language_code: de
                text: Das entspricht einem Kurzstreckenflug von 2 Kilometern.
              - language_code: en
                text: Equal to a short-distance flight of 2 kilometres.
        errors: []

    RefinementsUnavailableResponseExample:
      value:
        request_id: afb21a0fa3446220
        results: []
        errors: []
    RefinementsUnansweredResponseExample:
      value:
        request_id: ce359f490283d703
        results:
          - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            question_id: 9ce39d4f-cb36-4e93-b896-822156c9c159
            answer_id: null
            input: null
          - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            question_id: cf4bd26e-c1e6-40d5-8825-e12c0246a5d5
            answer_id: null
            input: null
          - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            question_id: a94bc4b7-2664-43d3-97ee-1556bc6674ab
            answer_id: null
            input: null
        errors: []
    RefinementsAnsweredResponseExample:
      value:
        request_id: ce9904cad20e303d
        results:
          - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            question_id: 9ce39d4f-cb36-4e93-b896-822156c9c159
            answer_id: 2f085fa7-aceb-4e35-9da5-cb39f8a46fca
            input: null
          - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            question_id: cf4bd26e-c1e6-40d5-8825-e12c0246a5d5
            answer_id: 152a69f0-c6ff-4f7b-bfac-fe6e92773188
            input: null
          - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            question_id: a94bc4b7-2664-43d3-97ee-1556bc6674ab
            answer_id: a8c60936-c821-48c6-8975-9f209423d9d9
            input: null
        errors: []


    RefinementsAnswerFlightsRequestExample:
      value:
       transactions:
        - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
          answer_id: 2f085fa7-aceb-4e35-9da5-cb39f8a46fca
        - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
          answer_id: 152a69f0-c6ff-4f7b-bfac-fe6e92773188
        - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
          answer_id: a8c60936-c821-48c6-8975-9f209423d9d9
    
    RefinementsAnswerFlightsResponseExample:
      value:
        request_id: 71fb58b24f4180cf
        results:
          - transaction_id: 62c12ecc-17d7-469f-9ecc-b08e00eb8c90
            category:
              value: ex:transport.flight
              system: ECOLYTIQ
            co2_footprint:
              value: 2120016
              unit: g
        errors: []
        

    InsightsResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - id: 06462ed4-32e7-46b0-8920-31e982ba22c0
            categories:
              - system: ECOLYTIQ
                value: "ex:transport.flight"
            content:
              - language_code: de
                title: Ein einfacher Tipp für mehr Nachhaltigkeit!
                text: Die Wahl näher gelegener Urlaubsziele und Videokonferenzen statt Geschäftsreisen kann Flugreisen unnötig und nachhaltiger machen!
              - language_code: en
                title: An easy tip to become more sustainable!
                text: Choosing closer holiday destinations and video conferences over business trips can make air travel unnecessary and more sustainable!
          - id: 1b265b3b-d3b6-4e37-9f55-8c1632dc379e
            categories:
              - system: ECOLYTIQ
                value: "ex:misc.travel"
            content:
              - language_code: de
                title: Ein toller Tipp, um beim Autofahren Geld zu sparen!
                text: "Willst du etwas Energie und Geld sparen, während du fährst? Hier sind ein paar Tipps: achte auf den richtigen Reifendruck, vermeide unnötiges Gewicht im Auto, schalte früh und fahre nicht zu schnell."
              - language_code: en
                title: A great tip to save money while driving!
                text: "Want to save up some energy and money while you drive? Here are some tips: pay attention to the correct tire pressure, don't carry unnecessary weight in the car, shift gears early, and don't drive too fast."
        errors: []

    ContextualInsightsResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - id: 4573f579-6173-439d-9489-72dd3d69f7d7
            parameters:
              - parameter: percent
                value: "94.15"
            raw_content:
              - language_code: en
                text: Because you use green energy, you save {percent} percent on energy.
            content:
              - language_code: en
                text: Because you use green energy, you save 94.15 percent on energy.
          - id: e46f0eb1-efab-4407-a408-68c05f380bd8
            parameters:
              - parameter: percent
                value: "95"
            raw_content:
              - language_code: en
                text: "Because you use solar energy, you save {percent} percent on energy."
            content:
              - language_code: en
                text: "Because you use solar energy, you save 95 percent on energy."
        errors: []

    InsightsProfilingResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - account_id: 06462ed4-32e7-46b0-8920-31e982ba22c0
            content_ids: 
              - 035657e8-63d1-435a-a202-ef7ce6280093
              - 59501d85-a610-d41f-7bce-46944a0f90fe
              - 06462ed4-32e7-46b0-8920-31e982ba22c0
          - account_id: 2dba21bf-649b-400d-b949-99bd6fb7e5a2
            content_ids: 
              - 035657e8-63d1-435a-a202-ef7ce6280093
              - 59501d85-a610-d41f-7bce-46944a0f90fe
        errors: []

    ExplanationResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - id: 3f967ccf-8b20-4bee-9879-1174f7a7b250
            categories:
              - system: ECOLYTIQ
                value: "ex:shopping.online"
            content:
              - language_code: de
                text: "Die Umweltbilanz von Online Einkäufen basiert in unserer Berechnung auf zwei Aspekten.\r\n\r\n1. Der Wert für generellen Konsum / \u20AC\r\n2. Der Wert für Lieferungen / \u20AC (Amazon)\r\n\r\n1. Beim Onlinekauf eines Produktes beachten wir das CO\u00B2, das während der Produktion entsteht. Hierfür nutzen wir den Wert unserer Kategorie 'Genereller Konsum'.\r\n\r\n2. Dazu kommen die Emissionen, die durch die Lieferung entstehen. Hierfür nutzen wir Amazon Daten, da Amazon ein großer Repräsentant des Onlinehandels ist.\r\n\r\nEs ist wichtig anzumerken, dass ein Onlinekauf umweltschonender sein kann als ein persönlicher Einkauf, allerdings ist in dieser Kategorie sowohl die Emission für das Produkt, als auch für die Lieferung repräsentiert, während z.B. die Fahrt zum Geschäft und der dafür genutzte Treibstoff bei einem Offlinekauf in mehrere Kategorien aufgeteilt ist."
              - language_code: en
                text: "The footprint of online shopping in our calculation is based on two aspects.\r\n\r\n1. Value for general consumption / \u20AC\r\n2. Value for delivery / \u20AC (Amazon)\r\n\r\n1. In purchasing an item online we need to regard the amount of CO\u00B2 that was necessary for the production, as referred to in our category 'general consumption'.\r\n\r\n2. On top of this general consumption value we have the process of delivering the package to your doorstep. We use Amazon data for this, as they are the major representative for deliveries.\r\n\r\nGenerally speaking, an online delivery can be more sustainable than a purchase in person. In our calculation for online shopping the value is higher than in general consumption. However, if you take your car to drive to the store and buy the same product, you are likely to have a larger footprint for the added fuel and car use."
        errors: []
    BadRequestRefinements-Example:
      value:
        timestamp: "2022-12-02T15:40:48.413+00:00"
        status: 400
        error: "Bad Request"
        path: "/transactions/v1/refinements"
    BadRequest-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "invalid.request"
        error_description: "Size of transaction list must be between 1 and 500. But is null."
    Unauthorized-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "unauthorized"
        error_description: "Access Token is invalid or expired."
    NotFound-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "not.found"
        error_description: "Resource not found."
    RateLimit-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "rate.limit.exceeded"
        error_description: "Rate limit exceeded. Try again later."
    LanguageCodeListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - code: de
            description: German
            insights: true
            explanations: true
            comparables: true
            questions: false
          - code: en
            description: English
            insights: true
            explanations: true
            comparables: true
            questions: false
          - code: en-US
            description: English as used in the United States
            insights: true
            explanations: true
            comparables: false
            questions: false
    Transaction-Request-Example-01:
      value:
        transactions:
          - transaction_id: "62c12ecc-17d7-469f-9ecc-b08e00eb8c90"
            account_id: "a083e879-b37c-4307-9407-a9825d82800b"
            category:
              system: "ECOLYTIQ"
              value: "ex:transport.flight"
            co2_model: "DE"
            amount: 
              value: -2854.00
              currency_code: "EUR"
            datetime: "2022-05-15T14:18:34Z"
          - transaction_id: "fa2e6d26-fb0f-49f5-bc8d-ccedbc1ca084"
            account_id: "a083e879-b37c-4307-9407-a9825d82800b"
            category:
              system: "ECOLYTIQ"
              value: "ex:transport.servicestations"
            amount:
              value: -192.60
              currency_code: "EUR"
            co2_model: "DE"
            datetime: "2022-09-05T11:18:34Z"
    Transaction-Response-Example-01:
      value:
        request_id: "1d2dd5f3b23d3870"
        results: 
          - transaction_id: "62c12ecc-17d7-469f-9ecc-b08e00eb8c90"
            category: 
              value: "ex:transport.flight"
              system: "ECOLYTIQ"
            co2_footprint: 
              value: 4486488
              unit: "g"
          - transaction_id: "fa2e6d26-fb0f-49f5-bc8d-ccedbc1ca084"
            category: 
              value: "ex:transport.servicestations"
              system: "ECOLYTIQ"
            co2_footprint: 
              value: 348606
              unit: "g"          
        errors: []
        
    Transaction-Request-Example-02:
      value:
        transactions:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "763"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: Berlin
                country_code: DE
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "1711"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: London
                country_code: GB
    Transaction-Response-Example-02: 
      value:
        request_id: 2bbf33459525a4e2
        results:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            category:
              value: ex:misc
              system: ECOLYTIQ
            co2_footprint:
              value: 16472
              unit: g
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            category:
              value: ex:food.groceries
              system: ECOLYTIQ
            co2_footprint:
              value: 17666
              unit: g
        errors: []

    Transaction-Request-Example-03:
      value:
        async: true
        transactions:
          - transaction_id: 46cd8390-ccda-4773-b59d-03b2e6d3d11d
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "763"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: Berlin
                country_code: DE
          - transaction_id: 21e41260-7107-4a65-804c-d9b4f5f25e3a
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "1711"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: London
                country_code: GB

    Transaction-Response-Example-03:
      value:
        request_id: "f90b728d538cf847"
    
    Transaction-Category-Update-Request-Example-01:
      value:
        transactions:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            category:
              system: "ECOLYTIQ"
              value: "ex:misc"
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: "ECOLYTIQ"
              value: "ex:food.groceries"
    Transaction-Category-Update-Request-Example-02:
      value:
        async: true
        transactions:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            category:
              system: "ECOLYTIQ"
              value: "ex:misc"
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            category:
              system: "ECOLYTIQ"
              value: "ex:food.groceries"
          

    Transaction-Category-Update-Response-Example-01:
      value:
        request_id: "6bf3202ade4a7411"
        results:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            category:
              system: ECOLYTIQ
              value: "ex:misc"
            co2_footprint:
              unit: g
              value: 748
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            category:
              system: ECOLYTIQ
              value: "ex:food.groceries"
            co2_footprint:
              unit: g
              value: 1260
        errors: []
    
    Transaction-Category-Update-Response-Example-02:
      value:
        request_id: "6bf3202ade4a7411"
              
          
          
    
    Content-Rating-Request-Example:
      value:
        snapshot_time: "2022-05-15T10:12:00Z"
        ratings:
          - content_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            rating_system: five_star
            five_star: 
              1_star: 122
              2_star: 24
              3_star: 301
              4_star: 255
              5_star: 1001
          - content_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            rating_system: five_star
            five_star: 
              1_star: 22
              2_star: 242
              3_star: 31
              4_star: 1255
              5_star: 11
          - content_id: 45678d6b-432b-6bc3-8b5b-50f45230a8a5
            rating_system: five_star
            five_star: 
              1_star: 2
              2_star: 4
              3_star: 31
              4_star: 5
              5_star: 11

    Content-Rating-Response-Example:
      value:
        request_id: "6bf3202ade4a7411"
        results:
          - content_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
          - content_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
        errors:
          - content_id: 45678d6b-432b-6bc3-8b5b-50f45230a8a5
            error_code: not.found
            error_description: Resource not found  

  schemas:

    ContentRatingResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContentRatingResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ContentRatingError'
    
    ContentRatingResult:
      type: object
      required:
        - content_id
      properties:
        content_id:
          type: string

    ContentRatingError:
      type: object
      required:
        - content_id
        - error_code
        - error_description
      properties:
        content_id:
          type: string
        error_code:
          type: string
        error_description:
          type: string

    ContentRatingRequest:
      type: object
      required:
        - snapshot_time
        - ratings
      properties:
        snapshot_time:
          description: Time of snapshot
          type: string
          format: date-time
        ratings:
          description: list of ratings
          type: array
          items:
            $ref: '#/components/schemas/ContentRating'
    
    ContentRating:
      type: object
      required:
        - content_id
        - rating_system
      properties:
        content_id: 
          description: ID of content
          type: string
        rating_system: 
          description: Type of the used rating system.
          type: string
          enum: [five_star]
        five_star:
          $ref: '#/components/schemas/FiveStarRating'

    FiveStarRating:
      type: object
      description: 5-Star rating system. Present, iff rating_system is `five_star`
      required:
        - 1_star
        - 2_star
        - 3_star
        - 4_star
        - 5_star
      properties:
        1_star:
          description: total number of 1-star rating
          type: integer
        2_star:
          description: total number of 2-star rating
          type: integer
        3_star:
          description: total number of 3-star rating
          type: integer
        4_star:
          description: total number of 4-star rating
          type: integer
        5_star:
          description: total number of 5-star rating
          type: integer
        

    CO2ModelResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CO2Model'
    CO2Model:
      type: object
      required:
        - code
        - description
        - currency
        - enabled
      properties:
        code:
          type: string
          description: Unique code of the CO<sub>2</sub> model.
        description:
          type: string
          description: Description of the model, e.g., country or region for which is applicable.
        currency:
          type: string
          description: |
            ISO4217 three-letter currency code of the model. The model can be applied only if the amount of the transaction is in the same currency. 
          x-add-descripion: If another currency is used, the amount is internally converted to the model's currency.
        enabled:
          type: boolean
          description: True, iff the CO<sub>2</sub> model is enabled (e.g., with the active set of client credentials).

    CategorySystemListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CategorySystem'

    CategorySystem:
      type: object
      required:
        - code
        - enabled
      properties:
        code:
          type: string
          description: Unique code of the category system.
        description:
          type: string
          description: Description of the category system
        enabled:
          type: boolean
          description: True, iff the category system is enabled.

    CategoryListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDetails'

    CategoryDetails:
      type: object
      required:
        - category
        - system
      properties:
        category:
          type: string
          description: category name. Unique within the `system` context.
        system:
          type: string
          description: category system
        description:
          type: string
          description: Description of the category

    CurrencyListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Currency'

    Currency:
      type: object
      required:
        - code
        - description
        - decimal_places
        - enabled
      properties:
        code:
          type: string
          description: Unique currency code. (ISO 4217)
        description:
          type: string
          description: Description of the currency
        decimal_places:
          type: integer
          description: Number of decimal places of the currency
        enabled:
          type: boolean
          description: True, iff the currency is enabled.

    LanguageCodeListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/LanguageCode'

    LanguageCode:
      type: object
      required:
        - code
        - description
        - insights
        - explanations
        - comparables
        - questions
      properties:
        code:
          type: string
          description: Unique language code.
        description:
          type: string
          description: Description of the currency
        insights:
          type: boolean
          description: True, iff translations of insights are available
        explanations:
          type: boolean
          description: True, iff translations of explanations are available
        comparables:
          type: boolean
          description: True, iff translations of comparables are available
        questions:
          type: boolean
          description: True, iff translations of questions are available

    RequestId:
      type: string
      example: "6bf3202ade4a7411"

    QuestionResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    ContextualInsightsResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/ContextualInsight'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    InsightsResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Insight'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    InsightsProfilingResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/AccountInsightMapping'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    Insight:
      type: object
      required:
        - id
        - categories
        - content
      properties:
        id:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
        content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedInsight'

    ContextualInsight:
      type: object
      required:
        - id
        - content
        - parameters
        - raw_content
      properties:
        id:
          type: string
        parameters:
          type: array
          items:
            $ref: '#/components/schemas/ContextualInsightParameter'
        raw_content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedContextualInsight'
        content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedContextualInsight'

    ContextualInsightParameter:
      type: object
      required:
        - parameter
        - value
      properties:
        parameter:
          type: string
        value:
          type: string

    AccountInsightMapping:
      type: object
      required:
        - account_id
        - content_ids
      properties:
        account_id:
          type: string
          description: ID of the account.
        content_ids:
          type: array
          description: List of content IDs. Use the "Get Insights by IDs" endpoint to fetch the insight(s).
          items:
            type: string

    ExplanationsResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Explanation'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    Explanation:
      type: object
      required:
        - id
        - categories
        - content
      properties:
        id:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
        content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedExplanation'

    ComparableResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comparable'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'


    ResourceError:
      type: object
      required:
        - code
        - description
      properties:
        id:
          type: string
          description: ID of the resource that caused the error, if present
        code:
          description: identifies the type of error
          type: string
        description:
          description: human readable error description
          type: string

    Comparable:
      type: object
      required:
        - id
        - categories
        - content
      properties:
        id:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
        content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedComparable'

    ListOfFeedbackLoopsResponse:
      type: object
      properties:
        loops:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackLoops'

    FeedbackLoops:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/FeedbackLoopType'

    FeedbackLoopType:
      type: string
      enum:
        - PROFILE
        - TRANSACTION

    ApiError:
      description: |
        Error messages for API clients.
      type: object
      required:
        - request_id
        - error_code
        - error_description
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        error_code:
          type: string
        error_description:
          type: string


    ###########################

    TransactionRequest:
      description: "The complete list of transactions"
      type: object
      required:
        - transactions
      properties:
        async:
          type: boolean
          description: true, iff the request should be processed asynchronously
        transactions:
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/Transaction'

    TransactionCategoryUpdateRequest:
      description: "The list of categories of transactions that should e updated"
      type: object
      required:
        - transactions
      properties:
        async:
          type: boolean
          description: true, iff the request should be processed asynchronously
        transactions:
          type: array
          minItems: 1
          maxItems: 500
          items:
            $ref: '#/components/schemas/TransactionCategoryUpdate'

    CO2Footprint:
      description: |
        CO2Footprint object
      type: object
      required:
        - value
        - unit
      properties:
        value:
          description: value of co2 footprint
          type: number
          format: bigdecimal
          example: 10
        unit:
          description: unit of co2 footprint
          type: string
          enum:
            - g
            - kg
          example: g

    TransactionResponse:
      description: "holds information about transactions"
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TransactionError'

    
    TransactionRefinementResponse:
      description: "holds information about transactions"
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TransactionError'

    TransactionAsyncResponse:
      description: "holds information about invalid transactions"
      type: object
      required:
        - request_id
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'

    TransactionResult:
      description: "holds information about valid transactions"
      type: object
      required:
        - transaction_id
        - category
        - co2_footprint
      properties:
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        category:
          $ref: '#/components/schemas/Category'
        co2_footprint:
          $ref: '#/components/schemas/CO2Footprint'

    TransactionError:
      description: "holds information about invalid transactions"
      type: object
      required:
        - transaction_id
      properties:
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        error_code:
          type: string
        error_description:
          type: string

    TransactionId:
      description: identifies a transaction
      type: string
      maxLength: 64
      example: 74263e87-93cb-46be-a132-9cd260716f07

    AccountId:
      description: identifies a bank account / user.
      type: string
      maxLength: 64
      example: 1c974398-4d2b-44fa-b292-64a46c0e6577

    Datetime:
      description: identifies a bank account / user.
      type: string
      format: date-time
      example: 1c974398-4d2b-44fa-b292-64a46c0e6577

    Transaction:
      description: "holds information about bank transactions"
      type: object
      required:
        - transaction_id
        - account_id
        - amount
        - category
        - co2_model
        - datetime
      properties:
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        account_id:
          $ref: '#/components/schemas/AccountId'
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/Category'
        co2_model:
          type: string
        datetime:
          type: string
        merchant:
          $ref: '#/components/schemas/Merchant'
        description:
          type: string
          maxLength: 400
          description: Purpose / Description of transaction

    TransactionCategoryUpdate:
      description: "holds information about the transaction and the new category"
      type: object
      required:
        - transaction_id
        - category
      properties:
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        category:
          $ref: '#/components/schemas/Category'

    Category:
      description: |
        holds category information
      type: object
      required:
        - value
        - system
      properties:
        value:
          description: category value
          type: string
        system:
          description: category system
          type: string

    Amount:
      description: |
        holds amount information
      type: object
      required:
        - value
        - currency_code
      properties:
        value:
          description: decimal fraction depends on currency and can be between 0 and 3
          type: number
          maximum: 0
          minimum: -999999999999999.999
        currency_code:
          type: string
          description: ISO 4217 currency code. See Info API to get a list of supported/enabled currency codes.

    Merchant:
      description: |
        holds merchant information
      type: object
      required:
        - name
      properties:
        name:
          description: name of merchant
          type: string
          maxLength: 2048
        web:
          description: web url of merchant
          type: string
          format: url
          maxLength: 2048
        address:
          $ref: '#/components/schemas/Address'
        gps:
          $ref: '#/components/schemas/GPS'

    GPS:
      description: |
        holds geographic coordinates as decimal fractions (decimal places = 6) of a degree.
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          description: latitude as decimal fractions (decimal places = 6) of a degree
          type: number
          minimum: -90
          maximum: 90
        longitude:
          description: longitude as decimal fractions (decimal places = 6) of a degree
          type: number
          minimum: -180
          maximum: 180

    Address:
      description: |
        holds address information
      type: object
      required:
        - "city"
      properties:
        street:
          description: Name of the street
          type: string
          maxLength: 100
        street_no:
          description: Street No. Can be also a range
          type: string
        postal_code:
          description: Postal code
          type: string
          maxLength: 12
        city:
          description: Name of the City
          type: string
          maxLength: 180
        country_code:
          description: ISO 3166 Alpha-2 country code.
          type: string
          minLength: 2
          maxLength: 2
      example:
        street: Second Street
        street_no: 42
        postal_code: 11223
        city: Berlin
        country_code: DE

    Question:
      type: object
      required:
        - id
        - type
        - categories
        - text
        - selectable
      properties:
        id:
          type: string
        categories:
          type: array
          items:
            type: string
          description: ecoyltiq category codes of this question
        text:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
        type:
          $ref: '#/components/schemas/AnswerType'
        selectable:
          description: List of selectable answers.
          type: array
          items:
            $ref: '#/components/schemas/Answer'
        input:
          $ref: '#/components/schemas/ExpectedAnswerInput'

    ExpectedAnswerInput:
      type: object
      description: Describes a valid input that can be used as answer.
      required:
        - id
        - datatype
        - validation
      properties:
        id:
          type: string
        datatype:
          type: string
          enum:
            - STRING
            - INTEGER
            - NUMBER
        validation:
          type: array
          items:
            $ref: '#/components/schemas/InputValidation'

    InputValidation:
      type: object
      required:
        - name
        - condition
      properties:
        name:
          type: string
          enum:
            - GREATER
            - LESS
            - MIN_LENGTH
            - MAX_LENGTH
        condition:
          type: string

    AnswerType:
      type: string
      enum:
        - SELECTABLE
        - INPUT

    Answer:
      type: object
      required:
        - id
        - text
      properties:
        id:
          type: string
        text:
          type: array
          items:
            $ref: '#/components/schemas/Translation'

    BulkAnswerResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkAnswerResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BulkAnswerError'

    BulkAnswerResult:
      type: object
      required:
        - account_id
        - question_id
        - answer_id
      properties:
        account_id:
          type: string
        question_id:
          type: string
        answer_id:
          type: string

    BulkAnswerError:
      type: object
      required:
        - account_id
        - answer_id
        - code
        - description
      properties:
        account_id:
          type: string
        answer_id:
          type: string
        code:
          type: string
        description:
          type: string
  
    TransactionQuestionsResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionQuestionAnswerResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TransactionQuestionAnswerError'
    
    TransactionQuestionAnswerResult:
      type: object
      required:
        - transaction_id
        - question_id
      properties:
        transaction_id:
          type: string
        question_id:
          type: string
        answer_id:
          description: null, iff question is not answered
          type: string
        input:
          description: null, iff question is not answered with an user input
          type: string

    TransactionQuestionAnswerError:
      type: object
      required:
        - transaction_id
        - code
        - description
      properties:
        transaction_id:
          type: string
        code:
          type: string
        description:
          type: string

    TransactionBulkAnswerResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionBulkAnswerResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TransactionBulkAnswerError'

    TransactionBulkAnswerResult:
      type: object
      required:
        - transaction_id
        - question_id
        - answer_id
      properties:
        transaction_id:
          type: string
        question_id:
          type: string
        answer_id:
          type: string

    TransactionBulkAnswerError:
      type: object
      required:
        - transaction_id
        - answer_id
        - code
        - description
      properties:
        transaction_id:
          type: string
        answer_id:
          type: string
        code:
          type: string
        description:
          type: string

    BulkAnswersRequest:
      type: object
      required:
        - answers
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/AnswerRequest'

    AnswerRequest:
      type: object
      required:
        - account_id
        - answer_id
      properties:
        answer_id:
          type: string
        account_id:
          $ref: '#/components/schemas/AccountId'
        input:
          type: string
          description: user input

    TransactionBulkAnswersRequest:
      type: object
      required:
        - answers
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionAnswerRequest'

    TransactionAnswerRequest:
      type: object
      required:
        - transaction_id
        - answer_id
      properties:
        answer_id:
          type: string
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        input:
          type: string
          description: user input

    Translation:
      type: object
      required:
        - language
        - text
      properties:
        language:
          type: string
        text:
          type: string

    TranslatedExplanation:
      type: object
      required:
        - language_code
        - text
      properties:
        language_code:
          type: string
        text:
          type: string

    TranslatedComparable:
      type: object
      required:
        - language_code
        - text
      properties:
        language_code:
          type: string
        text:
          type: string

    TranslatedContextualInsight:
      type: object
      required:
        - language_code
        - text
      properties:
        language_code:
          type: string
        text:
          type: string

    TranslatedInsight:
      type: object
      required:
        - language_code
        - title
        - text
      properties:
        language_code:
          type: string
        title:
          type: string
        text:
          type: string

    DeleteAccountsRequest:
      type: object
      required:
        - account_ids
      properties:
        async:
          type: boolean
          description: "true, iff the request should be processed asynchronously. Default: false"
        account_ids:
          type: array
          description: a list of account ids
          items:
            type: string

    DeleteAccountsResponse:
      type: object
      required:
        - request_id
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'

    AuthRequest:
      type: object
      required:
        - grant_type
        - scope
      properties:
        grant_type:
          type: string
          enum: 
            - client_credentials
          description: describes the used grant type. 
        scope:
          type: string
          enum:
            - all

    AuthResponse:
      type: object
      required:
        - access_token
        - token_type
        - expires_in
        - scope
        - jti
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpX ...
          description: OAuth 2.0 Access Token
        scope:
          type: string
          example: all
          description: Scope of the Access Token
        expires_in:
          type: integer
          example: 3599
          description: Lifetime of the Access Token in sec.
        token_type:
          type: string
          example: bearer
          description: Token Type - always bearer
        jti:
          type: string
          example: bc415e82-b262-475a-8f03-6c9028bb5991
          description: JWT ID. Can be used to invalidate the Access Token
