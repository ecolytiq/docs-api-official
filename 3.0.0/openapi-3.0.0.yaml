openapi: 3.0.3

info:
  description: |
    Draft of the APIs of the ecolytiq SaaS
  version: 3.0.0
  title: ecolytiq SaaS
  contact:
    email: support@ecolytiq.com
    name: ecolytiq GmbH
    url: https://ecolytiq.com
  termsOfService: https://ecolytiq.com/imprint
  x-logo:
    url: "https://developer.ecolytiq.com/assets/logo.png"
    backgroundColor: "#F9F9F9"
    altText: "ecolytiq GmbH"
servers:
  - description: ecolytiq API (Sandbox)
    url: https://api.sandbox.arm.ecolytiq.network
tags:
  - name: Authentication
  - name: Errors
    description: |
      ## HTTP Status Code Summary
      | Status Code                        | Description                                                                                      |
      |------------------------------------|--------------------------------------------------------------------------------------------------|
      | 200 - OK                           | Everything worked as expected.                                                                   |
      | 201 - Created                      | Everything worked as expected. Resource created.                                                 |
      | 204 - No Content                   | Everything worked as expected.                                                                   |
      | 400 - Bad Request                  | The request was unacceptable, often due to missing a required parameter.                         |
      | 401 - Unauthorized                 | No valid Access Token provided.                                                                  |
      | 403 - Forbidden                    | The API key doesn't have permissions to perform the request.                                     |
      | 404 - Not Found                    | The requested resource doesn't exist.                                                            |
      | 409 - Conflict                     | The request conflicts with another request (perhaps due to using the same idempotent key).       |
      | 422 - Unprocessable Entity         | Unprocessable Entity                                                                             |
      | 429 - Too Many Requests            | Too many requests hit the API too quickly. We recommend an exponential backoff of your requests. |
      | 500, 502, 503, 504 - Server Errors | Something went wrong on ecolytiq's end.                                                          |
  - name: Rate Limit
    description: |
      In each response you find Rate Limit Information fields like `X-RateLimit-Limit`, `X-RateLimit-Remaining` and `X-RateLimit-Reset`.
      
      ## Rate Limit Headers
      | Header                | Description                                                         |
      |-----------------------|---------------------------------------------------------------------|
      | X-RateLimit-Limit     | Number of requests for the specific endpoint                        |
      | X-RateLimit-Remaining | Number of ramining requests for the specific endpoint               |
      | X-RateLimit-Reset     | Date-Time, when X-RateLimit-Remaining is reset to X-RateLimit-Limit |

      At the moment we do not use rate limits. However, we reserve the right to use them. This will be announced.
  - name: Postman
    description: >-
      ## Import Request Collection and Environment

      ### Request Collection

      1. In Postman, click on the "Import" button in the upper left corner.

      2. In the opened window click on "Choose Files" under "Import File".

      3. Select the file "Sandbox.postman_collection.json" and press "open".

      4. The collection is now imported and can be found in the list on the left side of the window.


      ### Environment

      1. In Postman, click on the "Import" button in the upper left corner.

      2. Click on "Import" in the lower right corner of the currently opened window.

      3. Click on "Select File", choose then "*.postman_environment.json" (you get the file during the onboarding phase) and press "open".

      4. Close the "Management Environment" window.

      5. Select "Sandbox" from the dropdown in the upper right corner.

      ## Download

      <a href ="https://ecolytiq-team.github.io/docs-api-official/3.0.0/postman/Sandbox.postman_collection.json" download>Sandbox.postman_collection.json</a>
  - name: Info API
  - name: Transaction API
  - name: Content API
  - name: Profiling API
  - name: Account API


paths:

  /oauth/token:
    post:
      security:
        - BasicAuth: []
      description: Request OAuth 2.0 Access Token with client credentials grant. This endpoint is proteced with Basic Auth. Use the client_id as username and the client_secret as password.
      summary: Request Access Token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthRequest'
      responses:
        '200':
          description: |
            AccessToken and Lifetime
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: |
            Unauthorized. Invalid or expired Client Credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'

  /info/v1/co2models:
    get:
      security:
        - BearerAuth: []
      description: Lists supported and permitted co2 models
      summary: List of CO2 models
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of supported and enabled co2 models.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CO2ModelResponse'
              examples:
                Example:
                  $ref: '#/components/examples/CO2ModelListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /info/v1/category-systems:
    get:
      security:
        - BearerAuth: []
      description: List of supported and enabled category systems
      summary: List of category systems
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of supported and enabled category systems.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategorySystemListResponse'
              examples:
                Example:
                  $ref: '#/components/examples/CategorySystemListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /info/v1/categories:
    get:
      security:
        - BearerAuth: []
      description: List of categories
      summary: List of categories
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of categories
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryListResponse'
              examples:
                Example:
                  $ref: '#/components/examples/CategoryListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /info/v1/language-codes:
    get:
      security:
        - BearerAuth: []
      description: List of supported and enabled language codes
      summary: List of enabled language codes
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of supported and enabled language codes.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguageCodeListResponse'
              examples:
                Example:
                  $ref: '#/components/examples/LanguageCodeListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /info/v1/currency-codes:
    get:
      security:
        - BearerAuth: []
      description: Lists supported and enabled currency codes
      summary: List of enabled currency codes
      tags:
        - Info API
      responses:
        '200':
          description: |
            List of supported and enabled currency codes.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyListResponse'
              examples:
                Example:
                  $ref: '#/components/examples/CurrencyCodeListExample'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Unauthorized:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Ratelimit:
                  $ref: '#/components/examples/RateLimit-Example'

  /transactions/v1/transactions:
    post:
      security:
        - BearerAuth: []
      description: Use this endpoint to process and store bank transactions. Successful processed transactions are in the results list, identifiable by their `transaction_id`. In case of an error (e.g. unknown categor, you can find  the transction in the errors list, identifiable by their `transaction_id` as well.   
      summary: Process transactions
      tags:
        - Transaction API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
            examples:
              Minimal-Request:
                $ref: '#/components/examples/Transaction-Request-Example-01'
              Request-With-Merchant:
                $ref: '#/components/examples/Transaction-Request-Example-02'
              Async-Request-With-Merchant:
                $ref: '#/components/examples/Transaction-Request-Example-03'
      responses:
        '200':
          description: |
            Result of Transaction processing.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
              examples:
                Response-Without-Request:
                  $ref: '#/components/examples/Transaction-Response-Example-01'
                Response-With-Request:
                  $ref: '#/components/examples/Transaction-Response-Example-02'
        '202':
          description: |
            Result of Transaction processing.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionAsyncResponse'
              examples:
                Response:
                  $ref: '#/components/examples/Transaction-Response-Example-03'
        '400':
          description: |
            Bad Request. Size of Transactions is invalid.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'

    get:
      security:
        - BearerAuth: []
      summary: Get Transactions by IDs
      description: Get Transactions by IDs
      tags:
        - Transaction API
      parameters:
        - in: query
          required: true
          name: ids
          schema:
            type: array
            minItems: 1
            maxItems: 100
            items:
              $ref: '#/components/schemas/TransactionId'
          style: form
          explode: false
      responses:
        '200':
          description: List of requested Transactions
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: |
            Bad Request. Size of Transactions is invalid.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                BadRequest-Example:
                  $ref: '#/components/examples/RateLimit-Example'
  
  /content/v1/comparables:
    get:
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: Get a list of Comparables for a given co2 footprint.
      parameters:
        - in: query
          name: co2_footprint
          description: CO2 footprint in grams
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all comparables returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: language_codes
          description: language code. See Info API to get a list of supported and enabled languages.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of comparables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComparableResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ComparableResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/comparables/random:
    get:
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: Get Comparables for a given co2 footprint
      parameters:
        - in: query
          name: co2_footprint
          description: CO2 footprint in grams
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
        - in: query
          name: categories
          description: used as filter for categories. If it is unset or empty all categories are used.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: size
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - in: query
          name: language_codes
          description: language
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of comparables
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComparableResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ComparableResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/insights:
    get:
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: Get Insights by IDs.
      parameters:
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all insights returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: language_codes
          description: language
          required: false
          style: form
          explode: true
          schema:
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of insights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/InsightsResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/insights/random:
    get:
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: Get Insights (for a given category)
      parameters:
        - in: query
          name: categories
          description: used as filter for categories. If it is unset or empty all categories are used.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: size
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - in: query
          name: language_codes
          description: language
          required: false
          style: form
          explode: true
          schema:
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of insights
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InsightsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/InsightsResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/explanations:
    get:
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: Get Explanations (for a given categories)
      parameters:
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all explanations returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
              minimum: 1
              maximum: 10
        - in: query
          name: language_codes
          description: language
          required: false
          style: form
          explode: true
          schema:
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of explanations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ExplanationResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /content/v1/explanations/random:
    get:
      security:
        - BearerAuth: []
      tags:
        - Content API
      description: Get Explanations (for a given categories)
      parameters:
        - in: query
          name: categories
          description: used as filter for categories. If it is unset or empty all categories are used.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: size
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10
        - in: query
          name: language_codes
          description: language
          required: false
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of explanations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExplanationsResponse'
              examples:
                Example:
                  $ref: '#/components/examples/ExplanationResponseExample'
        '400':
          description: |
            Bad Request.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/BadRequest-Example'
        '401':
          description: |
            Unauthorized. Access Token is invalid or expired.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/Unauthorized-Example'
        '429':
          description: |
            Rate Limit exceeded.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                Example:
                  $ref: '#/components/examples/RateLimit-Example'

  /profiling/v1/onboardings:
    get:
      security:
        - BearerAuth: []
      summary: Get a List of Onboardings (Experimental)
      description: |
        Get a List of Onboardings. An Onboarding is a Set of Questions and Answers to build a profile for end-users.
      tags:
        - Profiling API
      responses:
        '200':
          description: List of Onboardings
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OnboardingResponse'

  /profiling/v1/onboardings/{onboarding_id}/start:
    get:
      security:
        - BearerAuth: []
      summary: Start or continue Onboarding (Experimental)
      description: |
        Start or continue Onboarding
      tags:
        - Profiling API
      parameters:
        - in: path
          required: true
          name: onboarding_id
          description: Onboarding ID
          schema:
            type: string
        - in: query
          name: account_id
          required: true
          description: Account ID
          schema:
            $ref: '#/components/schemas/AccountId'
      responses:
        '200':
          description: List of onboardings
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextQuestionResponse'
        '404':
          description: |
            Not found. Onboarding not found.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                NotFound:
                  $ref: '#/components/examples/NotFound-Example'

  /profiling/v1/onboardings/{onboarding_id}/next:
    post:
      security:
        - BearerAuth: []
      summary: Save Onboarding Question and get next one (Experimental)
      description: |
        Get a List of Onboardings. An Onboarding is a Set of Questions and Answers to build a profile for end-users.
      tags:
        - Profiling API
      parameters:
        - in: path
          required: true
          name: onboarding_id
          description: Onboarding ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
      responses:
        '200':
          description: List of onboardings
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextQuestionResponse'
        '404':
          description: |
            Not found. Onboarding not found.
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
              examples:
                NotFound:
                  $ref: '#/components/examples/NotFound-Example'

  /profiling/v1/questions:
    get:
      security:
        - BearerAuth: []
      summary: Get Questions by IDs
      description: Get Questions and Answers by IDs
      tags:
        - Profiling API
      parameters:
        - in: query
          name: ids
          description: a list of ids. If list of ids are not present, all questions (+answers) returned.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
        - in: query
          name: language_codes
          description: language code. See Info API to get a list of supported and enabled languages.
          required: false
          style: form
          explode: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          description: A list of Questions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionResponse'

  /profiling/v1/answer:
    post:
      security:
        - BearerAuth: []
      description: Save Answer for a given Question
      tags:
        - Profiling API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BulkAnswersRequest'
      responses:
        '200':
          description: Confirmation that answer is saved
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkAnswerResponse'

  /account/v1/delete-accounts:
    post:
      security:
        - BearerAuth: []
      description: Delete all data of the given accounts.
      tags:
        - Account API
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccountsRequest'
      responses:
        '200':
          description: Confirmation that the request has been processed
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountsResponse'
        '202':
          description: Confirmation that request can be handled
          headers:
            X-RateLimit-Limit:
              $ref: '#/components/headers/X-RateLimit-Limit'
            X-RateLimit-Remaining:
              $ref: '#/components/headers/X-RateLimit-Remaining'
            X-RateLimit-Reset:
              $ref: '#/components/headers/X-RateLimit-Reset'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccountsResponse'

components:
  headers:
    X-RateLimit-Limit:
      schema:
        type: integer
      description: Request limit per hour.
    X-RateLimit-Remaining:
      schema:
        type: integer
      description: The number of requests left for the time window.
    X-RateLimit-Reset:
      schema:
        type: string
        format: date-time
      description: The UTC date/time at which the current rate limit window resets.

  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  examples:
    CO2ModelListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - code: DE
            description: CO2 model of Germany.
            currency: EUR
            enabled: true
          - code: FR
            description: CO2 model of France.
            currency: EUR
            enabled: false
          - code: UK
            description: CO2 model of the United Kingdom.
            currency: GBP
            enabled: true
          - code: US
            description: CO2 model of the United States of America.
            currency: USD
            enabled: false
    CategorySystemListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - code: ECOLYTIQ
            description: The ecolytiq category system
            enabled: true
          - code: FTS
            description: The FintecSystems category system
            enabled: false
          - code: MCC
            description: Merchant Category Codes
            enabled: true
    CategoryListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - category: ex:misc
            system: ECOLYTIQ
            description: General
          - category: ex:food.groceries
            system: ECOLYTIQ
            description: Category for groceries
    CurrencyCodeListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - code: EUR
            description: Euro
            decimal_places: 2
            enabled: true
          - code: GBP
            description: Pound sterling
            decimal_places: 2
            enabled: false
          - code: JPY
            description: Japanese yen
            decimal_places: 0
            enabled: false
          - code: USD
            description: United States dollar
            decimal_places: 2
            enabled: true
    ComparableResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - id: 02805b59-878d-438d-a68b-9d721766ec60
            categories:
              - system: ECOLYTIQ
                value: "ex:misc"
              - system: ECOLYTIQ
                value: "ex:food.groceries"
            content:
              - language_code: de
                text: Das entspricht 14 Paketlieferungen.
              - language_code: en
                text: Equal to 14 parcel deliveries.
          - id: 0c21d5d2-9992-4d97-ae0f-713af30e1165
            categories:
              - system: ECOLYTIQ
                value: "ex:misc"
              - system: ECOLYTIQ
                value: "ex:food.groceries"
            content:
              - language_code: de
                text: Das entspricht einem Kurzstreckenflug von 2 Kilometern.
              - language_code: en
                text: Equal to a short-distance flight of 2 kilometres.
        errors: []
    InsightsResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - id: 06462ed4-32e7-46b0-8920-31e982ba22c0
            categories:
              - system: ECOLYTIQ
                value: "ex:transport.flight"
            content:
              - language_code: de
                title: Ein einfacher Tipp für mehr Nachhaltigkeit!
                text: Die Wahl näher gelegener Urlaubsziele und Videokonferenzen statt Geschäftsreisen kann Flugreisen unnötig und nachhaltiger machen!
              - language_code: en
                title: An easy tip to become more sustainable!
                text: Choosing closer holiday destinations and video conferences over business trips can make air travel unnecessary and more sustainable!
          - id: 1b265b3b-d3b6-4e37-9f55-8c1632dc379e
            categories:
              - system: ECOLYTIQ
                value: "ex:misc.travel"
            content:
              - language_code: de
                title: Ein toller Tipp, um beim Autofahren Geld zu sparen!
                text: "Willst du etwas Energie und Geld sparen, während du fährst? Hier sind ein paar Tipps: achte auf den richtigen Reifendruck, vermeide unnötiges Gewicht im Auto, schalte früh und fahre nicht zu schnell."
              - language_code: en
                title: A great tip to save money while driving!
                text: "Want to save up some energy and money while you drive? Here are some tips: pay attention to the correct tire pressure, don't carry unnecessary weight in the car, shift gears early, and don't drive too fast."
        errors: []

    ExplanationResponseExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - id: 3f967ccf-8b20-4bee-9879-1174f7a7b250
            categories:
              - system: ECOLYTIQ
                value: "ex:shopping.online"
            content:
              - language_code: de
                text: "Die Umweltbilanz von Online Einkäufen basiert in unserer Berechnung auf zwei Aspekten.\r\n\r\n1. Der Wert für generellen Konsum / \u20AC\r\n2. Der Wert für Lieferungen / \u20AC (Amazon)\r\n\r\n1. Beim Onlinekauf eines Produktes beachten wir das CO\u00B2, das während der Produktion entsteht. Hierfür nutzen wir den Wert unserer Kategorie 'Genereller Konsum'.\r\n\r\n2. Dazu kommen die Emissionen, die durch die Lieferung entstehen. Hierfür nutzen wir Amazon Daten, da Amazon ein großer Repräsentant des Onlinehandels ist.\r\n\r\nEs ist wichtig anzumerken, dass ein Onlinekauf umweltschonender sein kann als ein persönlicher Einkauf, allerdings ist in dieser Kategorie sowohl die Emission für das Produkt, als auch für die Lieferung repräsentiert, während z.B. die Fahrt zum Geschäft und der dafür genutzte Treibstoff bei einem Offlinekauf in mehrere Kategorien aufgeteilt ist."
              - language_code: en
                text: "The footprint of online shopping in our calculation is based on two aspects.\r\n\r\n1. Value for general consumption / \u20AC\r\n2. Value for delivery / \u20AC (Amazon)\r\n\r\n1. In purchasing an item online we need to regard the amount of CO\u00B2 that was necessary for the production, as referred to in our category 'general consumption'.\r\n\r\n2. On top of this general consumption value we have the process of delivering the package to your doorstep. We use Amazon data for this, as they are the major representative for deliveries.\r\n\r\nGenerally speaking, an online delivery can be more sustainable than a purchase in person. In our calculation for online shopping the value is higher than in general consumption. However, if you take your car to drive to the store and buy the same product, you are likely to have a larger footprint for the added fuel and car use."
        errors: []
    BadRequest-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "invalid.request"
        error_description: "Size of transaction list must be between 1 and 100. But is null."
    Unauthorized-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "unauthorized"
        error_description: "Access Token is invalid or expired."
    NotFound-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "not.found"
        error_description: "Resource not found."
    RateLimit-Example:
      value:
        request_id: 6bf3202ade4a7411
        error_code: "rate.limit.exceeded"
        error_description: "Rate limit exceeded. Try again later."
    LanguageCodeListExample:
      value:
        request_id: 6bf3202ade4a7411
        results:
          - code: de
            description: German
            insights: true
            explanations: true
            comparables: true
            questions: false
          - code: en
            description: English
            insights: true
            explanations: true
            comparables: true
            questions: false
          - code: en-US
            description: English as used in the United States
            insights: true
            explanations: true
            comparables: false
            questions: false
    Transaction-Request-Example-01:
      value:
        transactions:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "763"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "1711"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
    Transaction-Request-Example-02:
      value:
        transactions:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "763"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: Berlin
                country_code: DE
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "1711"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: London
                country_code: GB
    Transaction-Request-Example-03:
      value:
        async: true
        transactions:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "763"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: Berlin
                country_code: DE
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: MCC
              value: "1711"
            co2_model: DE
            amount:
              value: -20.59
              currency_code: EUR
            datetime: "2021-01-17T12:45:00Z"
            merchant:
              name: Fancy Supermarket
              address:
                city: London
                country_code: GB
    Transaction-Response-Example-01:
      value:
        request_id: "6bf3202ade4a7411"
        results:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: ECOLYTIQ
              value: "ex:misc"
            co2_footprint:
              unit: gram
              value: 748
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: ECOLYTIQ
              value: "ex:food.groceries"
            co2_footprint:
              unit: gram
              value: 1260
    Transaction-Response-Example-02:
      value:
        request_id: "6bf3202ade4a7411"
        results:
          - transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: ECOLYTIQ
              value: "ex:misc"
            co2_footprint:
              unit: gram
              value: 748
            request:
              transaction_id: 71b24bdd-8aa4-4b8d-893b-4e74b05a1c98
              account_id: 10547323-5594-45a7-a58f-3b8618770b7c
              amount:
                value: -3.22
                currency_code: EUR
          - transaction_id: fbc78d6b-122b-4ae3-8b5b-50f45230a39f
            account_id: 10547323-5594-45a7-a58f-3b8618770b7c
            category:
              system: ECOLYTIQ
              value: "ex:food.groceries"
            co2_footprint:
              unit: gram
              value: 1260
        errors: []
    Transaction-Response-Example-03:
      value:
        request_id: "6bf3202ade4a7411"
  schemas:

    CO2ModelResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CO2Model'
    CO2Model:
      type: object
      required:
        - code
        - description
        - currency
        - enabled
      properties:
        code:
          type: string
          description: Unique code of the co2 model.
        description:
          type: string
          description: Description of the model
        currency:
          type: string
          description: |
            Currency of the model. The model can be applied only if the amount of the transaction is in the same currency. If another currency is used, the amount is internally converted to the model's currency.
        enabled:
          type: boolean
          description: True, iff the CO2 model is enabled.

    CategorySystemListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CategorySystem'

    CategorySystem:
      type: object
      required:
        - code
        - enabled
      properties:
        code:
          type: string
          description: Unique code of the category system.
        description:
          type: string
          description: Description of the category system
        enabled:
          type: boolean
          description: True, iff the category system is enabled.

    CategoryListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDetails'

    CategoryDetails:
      type: object
      required:
        - category
        - system
      properties:
        category:
          type: string
          description: category name. Unique within the `system` context.
        system:
          type: string
          description: category system
        description:
          type: string
          description: Description of the category

    CurrencyListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Currency'

    Currency:
      type: object
      required:
        - code
        - description
        - decimal_places
        - enabled
      properties:
        code:
          type: string
          description: Unique currency code. (ISO 4217)
        description:
          type: string
          description: Description of the currency
        decimal_places:
          type: integer
          description: Number of decimal places of the currency
        enabled:
          type: boolean
          description: True, iff the currency is enabled.

    LanguageCodeListResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/LanguageCode'

    LanguageCode:
      type: object
      required:
        - code
        - description
        - insights
        - explanations
        - comparables
        - questions
      properties:
        code:
          type: string
          description: Unique language code.
        description:
          type: string
          description: Description of the currency
        insights:
          type: boolean
          description: True, iff translations of insights are available
        explanations:
          type: boolean
          description: True, iff translations of explanations are available
        comparables:
          type: boolean
          description: True, iff translations of comparables are available
        questions:
          type: boolean
          description: True, iff translations of questions are available

    RequestId:
      type: string
      example: "6bf3202ade4a7411"

    OnboardingResponse:
      type: object
      required:
        - request_id
        - results
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Onboarding'

    Onboarding:
      type: object
      required:
        - id
      properties:
        id:
          description: ID of onboarding scenario
          type: string
          example: "vcc80kePB0Uc8Yb0"
        name:
          description: Name of onboarding scenario
          type: string
          example: "Conditional Food Questions"

    QuestionResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    InsightsResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Insight'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    Insight:
      type: object
      required:
        - id
        - categories
        - content
      properties:
        id:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
        content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedInsight'

    ExplanationsResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Explanation'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'

    Explanation:
      type: object
      required:
        - id
        - categories
        - content
      properties:
        id:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
        content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedExplanation'

    ComparableResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/Comparable'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ResourceError'


    ResourceError:
      type: object
      required:
        - code
        - description
      properties:
        id:
          type: string
          description: ID of the resource that caused the error, if present
        code:
          description: identifies the type of error
          type: string
        description:
          description: human readable error description
          type: string

    Comparable:
      type: object
      required:
        - id
        - categories
        - content
      properties:
        id:
          type: string
        categories:
          items:
            $ref: '#/components/schemas/Category'
        content:
          type: array
          items:
            $ref: '#/components/schemas/TranslatedComparable'

    NextQuestionResponse:
      type: object
      required:
        - account_id
        - questions
        - has_next
      properties:
        account_id:
          $ref: '#/components/schemas/AccountId'
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
        has_next:
          description: true, iff an unanswered question is available
          type: boolean

    ListOfFeedbackLoopsResponse:
      type: object
      properties:
        loops:
          type: array
          items:
            $ref: '#/components/schemas/FeedbackLoops'

    FeedbackLoops:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/FeedbackLoopType'

    FeedbackLoopType:
      type: string
      enum:
        - PROFILE
        - TRANSACTION

    ApiError:
      description: |
        Error messages for API clients.
      type: object
      required:
        - request_id
        - error_code
        - error_description
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        error_code:
          type: string
        error_description:
          type: string


    ###########################

    TransactionRequest:
      description: "The complete list of transactions"
      type: object
      required:
        - transactions
      properties:
        async:
          type: boolean
          description: true, iff the request should be processed asynchronously
        transactions:
          type: array
          minItems: 1
          maxItems: 100
          items:
            $ref: '#/components/schemas/Transaction'

    CO2Footprint:
      description: |
        CO2Footprint object
      type: object
      required:
        - value
        - unit
      properties:
        value:
          description: value of co2 footprint
          type: number
          format: bigdecimal
          example: 10
        unit:
          description: unit of co2 footprint
          type: string
          enum:
            - g
            - kg
          example: g

    TransactionResponse:
      description: "holds information about invalid transactions"
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'
        results:
          type: array
          items:
            $ref: '#/components/schemas/TransactionResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/TransactionError'

    TransactionAsyncResponse:
      description: "holds information about invalid transactions"
      type: object
      required:
        - request_id
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'

    TransactionResult:
      description: "holds information about valid transactions"
      type: object
      required:
        - transaction_id
        - category
        - co2_footprint
      properties:
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        category:
          $ref: '#/components/schemas/Category'
        co2_footprint:
          $ref: '#/components/schemas/CO2Footprint'

    TransactionError:
      description: "holds information about invalid transactions"
      type: object
      required:
        - transaction_id
      properties:
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        error_code:
          type: string
        error_description:
          type: string

    TransactionId:
      description: identifies a transaction
      type: string
      maxLength: 64
      example: 74263e87-93cb-46be-a132-9cd260716f07

    AccountId:
      description: identifies a bank account / user.
      type: string
      maxLength: 64
      example: 1c974398-4d2b-44fa-b292-64a46c0e6577

    Datetime:
      description: identifies a bank account / user.
      type: string
      format: date-time
      example: 1c974398-4d2b-44fa-b292-64a46c0e6577

    Transaction:
      description: "holds information about bank transactions"
      type: object
      required:
        - transaction_id
        - account_id
        - amount
        - category
        - co2_model
        - datetime
      properties:
        transaction_id:
          $ref: '#/components/schemas/TransactionId'
        account_id:
          $ref: '#/components/schemas/AccountId'
        amount:
          $ref: '#/components/schemas/Amount'
        category:
          $ref: '#/components/schemas/Category'
        co2_model:
          type: string
        datetime:
          type: string
        merchant:
          $ref: '#/components/schemas/Merchant'
        description:
          type: string
          maxLength: 400
          description: Purpose / Description of transaction

    Category:
      description: |
        holds category information
      type: object
      required:
        - value
        - system
      properties:
        value:
          description: category value
          type: string
        system:
          description: category system
          type: string

    Amount:
      description: |
        holds amount information
      type: object
      required:
        - value
        - currency_code
      properties:
        value:
          description: decimal fraction depends on currency and can be between 0 and 3
          type: number
          maximum: 0
          minimum: -999999999999999.999
        currency_code:
          type: string
          description: ISO 4217 currency code. See Info API to get a list of supported/enabled currency codes.

    Merchant:
      description: |
        holds merchant information
      type: object
      required:
        - name
      properties:
        name:
          description: name of merchant
          type: string
          maxLength: 2048
        web:
          description: web url of merchant
          type: string
          format: url
          maxLength: 2048
        address:
          $ref: '#/components/schemas/Address'
        gps:
          $ref: '#/components/schemas/GPS'

    GPS:
      description: |
        holds geographic coordinates as decimal fractions (decimal places = 6) of a degree.
      type: object
      required:
        - latitude
        - longitude
      properties:
        latitude:
          description: latitude as decimal fractions (decimal places = 6) of a degree
          type: number
          minimum: -90
          maximum: 90
        longitude:
          description: longitude as decimal fractions (decimal places = 6) of a degree
          type: number
          minimum: -180
          maximum: 180

    Address:
      description: |
        holds address information
      type: object
      required:
        - "city"
      properties:
        street:
          description: Name of the street
          type: string
          maxLength: 100
        street_no:
          description: Street No. Can be also a range
          type: string
        postal_code:
          description: Postal code
          type: string
          maxLength: 12
        city:
          description: Name of the City
          type: string
          maxLength: 180
        country_code:
          description: ISO 3166 Alpha-2 country code.
          type: string
          minLength: 2
          maxLength: 2
      example:
        street: Second Street
        street_no: 42
        postal_code: 11223
        city: Berlin
        country_code: DE

    Question:
      type: object
      required:
        - id
        - type
        - text
        - selectable
      properties:
        id:
          type: string
        text:
          type: array
          items:
            $ref: '#/components/schemas/Translation'
        type:
          $ref: '#/components/schemas/AnswerType'
        selectable:
          description: List of selectable answers.
          type: array
          items:
            $ref: '#/components/schemas/Answer'
        input:
          $ref: '#/components/schemas/ExpectedAnswerInput'

    ExpectedAnswerInput:
      type: object
      description: Describes a valid
      required:
        - id
        - datatype
        - validation
      properties:
        id:
          type: string
        datatype:
          type: string
          enum:
            - STRING
            - INTEGER
            - NUMBER
        validation:
          type: array
          items:
            $ref: '#/components/schemas/InputValidation'

    InputValidation:
      type: object
      required:
        - name
        - condition
      properties:
        name:
          type: string
          enum:
            - GREATER
            - LESS
            - MIN_LENGTH
            - MAX_LENGTH
        condition:
          type: string

    AnswerType:
      type: string
      enum:
        - SELECTABLE
        - INPUT

    Answer:
      type: object
      required:
        - id
        - text
      properties:
        id:
          type: string
        text:
          type: array
          items:
            $ref: '#/components/schemas/Translation'

    BulkAnswerResponse:
      type: object
      required:
        - request_id
        - results
        - errors
      properties:
        request_id:
          type: string
        results:
          type: array
          items:
            $ref: '#/components/schemas/BulkAnswerResult'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/BulkAnswerError'

    BulkAnswerResult:
      type: object
      required:
        - account_id
        - question_id
        - answer_id
      properties:
        account_id:
          type: string
        question_id:
          type: string
        answer_id:
          type: string

    BulkAnswerError:
      type: object
      required:
        - account_id
        - answer_id
        - code
        - description
      properties:
        account_id:
          type: string
        answer_id:
          type: string
        code:
          type: string
        description:
          type: string

    BulkAnswersRequest:
      type: object
      required:
        - answers
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/AnswerRequest'

    AnswerRequest:
      type: object
      required:
        - account_id
        - answer_id
      properties:
        answer_id:
          type: string
        account_id:
          $ref: '#/components/schemas/AccountId'
        input:
          type: string
          description: user input

    Translation:
      type: object
      required:
        - language
        - text
      properties:
        language:
          type: string
        text:
          type: string

    TranslatedExplanation:
      type: object
      required:
        - language_code
        - text
      properties:
        language_code:
          type: string
        text:
          type: string

    TranslatedComparable:
      type: object
      required:
        - language_code
        - text
      properties:
        language_code:
          type: string
        text:
          type: string

    TranslatedInsight:
      type: object
      required:
        - language_code
        - title
        - text
      properties:
        language_code:
          type: string
        title:
          type: string
        text:
          type: string

    DeleteAccountsRequest:
      type: object
      required:
        - account_ids
      properties:
        async:
          type: boolean
          description: "true, iff the request should be processed asynchronously. Default: false"
        account_ids:
          type: array
          description: a list of account ids
          items:
            type: string

    DeleteAccountsResponse:
      type: object
      required:
        - request_id
      properties:
        request_id:
          $ref: '#/components/schemas/RequestId'

    AuthRequest:
      type: object
      required:
        - grant_type
        - scope
      properties:
        grant_type:
          type: string
          enum: 
            - client_credentials
          description: describes the used grant type. 
        scope:
          type: string
          enum:
            - all

    AuthResponse:
      type: object
      required:
        - access_token
        - token_type
        - expires_in
        - scope
        - jti
      properties:
        access_token:
          type: string
          example: eyJhbGciOiJSUzI1NiIsInR5cCI6IkpX ...
          description: OAuth 2.0 Access Token
        scope:
          type: string
          example: all
          description: Scope of the Access Token
        expires_in:
          type: integer
          example: 3599
          description: Lifetime of the Access Token in sec.
        token_type:
          type: string
          example: bearer
          description: Token Type - always bearer
        jti:
          type: string
          example: bc415e82-b262-475a-8f03-6c9028bb5991
          description: JWT ID. Can be used to invalidate the Access Token
